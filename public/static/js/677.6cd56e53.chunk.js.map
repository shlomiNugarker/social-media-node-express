{"version":3,"file":"static/js/677.6cd56e53.chunk.js","mappings":"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","sources":["cmps/notifications/NotificaitonPreview.jsx","cmps/notifications/NotificationsList.jsx","pages/Notifications.jsx","../node_modules/react-timeago/es6/dateParser.js","../node_modules/react-timeago/es6/defaultFormatter.js","../node_modules/react-timeago/es6/index.js"],"sourcesContent":["import { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { userService } from '../../services/user/userService'\r\nimport TimeAgo from 'react-timeago'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { postService } from '../../services/posts/postService'\r\nimport loadingCircle from '../../assets/imgs/loading-circle.gif'\r\n\r\nexport function NotificaitonPreview({ activity }) {\r\n  const history = useHistory()\r\n  const [theNotLoggedUser, setTheNotLoggedUser] = useState(null)\r\n  const [str, setStr] = useState(null)\r\n  const [link, setLink] = useState(null)\r\n  const [createdByUser, setCreatedByUser] = useState(null)\r\n  const [createdToUser, setCreatedToUser] = useState(null)\r\n  const [isActivityUnread, setIsActivityUnread] = useState(false)\r\n\r\n  const { loggedInUser } = useSelector((state) => state.userModule)\r\n  const { unreadActivities } = useSelector((state) => state.activityModule)\r\n\r\n  const checkIfActivityUnread = () => {\r\n    return unreadActivities.some((activityId) => activityId === activity._id)\r\n  }\r\n\r\n  const getTheNotLoggedInUser = async () => {\r\n    const userId =\r\n      activity.createdBy === loggedInUser._id\r\n        ? activity.createdTo\r\n        : activity.createdBy\r\n\r\n    const user = await userService.getById(userId)\r\n    setTheNotLoggedUser(user)\r\n  }\r\n\r\n  const getTheCreatedByUser = () => {\r\n    const user =\r\n      activity.createdBy === loggedInUser._id ? loggedInUser : theNotLoggedUser\r\n\r\n    setCreatedByUser(user)\r\n  }\r\n\r\n  const getTheCreatedToUser = () => {\r\n    const user =\r\n      activity.createdTo === loggedInUser._id ? loggedInUser : theNotLoggedUser\r\n\r\n    setCreatedToUser(user)\r\n  }\r\n\r\n  const buildActivityStr = async () => {\r\n    if (!createdByUser || !createdToUser) return\r\n\r\n    if (activity.type === 'add-like') {\r\n      const post = await postService.getById(activity.postId)\r\n      const str = `${\r\n        createdByUser?._id === loggedInUser?._id\r\n          ? 'You'\r\n          : createdByUser?.fullname\r\n      } liked  post of ${\r\n        createdToUser._id === loggedInUser._id ? 'you' : createdToUser?.fullname\r\n      }`\r\n\r\n      const linkToPost = `post/${post?.userId}/${activity?.postId}`\r\n      setLink(linkToPost)\r\n      setStr(str)\r\n    } else if (activity.type === 'remove-like') {\r\n      const post = await postService.getById(activity.postId)\r\n      const str = `${\r\n        createdByUser?._id === loggedInUser?._id\r\n          ? 'You'\r\n          : createdByUser?.fullname\r\n      } unliked  post of ${\r\n        createdToUser._id === loggedInUser._id ? 'you' : createdToUser?.fullname\r\n      }`\r\n\r\n      const linkToPost = `post/${post?.userId}/${activity?.postId}`\r\n      setLink(linkToPost)\r\n      setStr(str)\r\n    }\r\n    //\r\n    else if (activity.type === 'add-comment') {\r\n      const post = await postService.getById(activity.postId)\r\n      const str = `${\r\n        createdByUser?._id === loggedInUser?._id\r\n          ? 'You'\r\n          : createdByUser?.fullname\r\n      } added a comment in your post `\r\n\r\n      const linkToPost = `post/${post?.userId}/${activity?.postId}`\r\n      setLink(linkToPost)\r\n      setStr(str)\r\n    } else if (activity.type === 'private-message') {\r\n      const str = `${createdByUser.fullname} sent you a private message`\r\n      const linkToPost = `message/`\r\n      setLink(linkToPost)\r\n      setStr(str)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    buildActivityStr()\r\n  }, [createdByUser, createdToUser])\r\n\r\n  useEffect(() => {\r\n    getTheCreatedToUser()\r\n    getTheCreatedByUser()\r\n\r\n    return () => {}\r\n  }, [theNotLoggedUser])\r\n\r\n  useEffect(() => {\r\n    if (!theNotLoggedUser) {\r\n      getTheNotLoggedInUser()\r\n    }\r\n\r\n    const isActivityUnread = checkIfActivityUnread()\r\n\r\n    setIsActivityUnread(isActivityUnread)\r\n\r\n    return () => {}\r\n  }, [unreadActivities])\r\n\r\n  return (\r\n    <section\r\n      className={`notificaiton-preview ${isActivityUnread ? 'unread' : ''}`}\r\n      onClick={() => {\r\n        history.push(link)\r\n      }}\r\n    >\r\n      <div className=\"img-container\">\r\n        {(createdByUser?.imgUrl && (\r\n          <img src={createdByUser?.imgUrl} alt=\"\" className=\"img\" />\r\n        )) || <img src={loadingCircle} alt=\"\" />}\r\n      </div>\r\n\r\n      <div className=\"content\">\r\n        <p>{str}</p>\r\n      </div>\r\n      <div className=\"menu\">\r\n        <p>\r\n          <TimeAgo date={activity.createdAt} />\r\n        </p>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n","import { NotificaitonPreview } from './NotificaitonPreview'\r\n\r\nexport function NotificationsList({activities}) {\r\n\r\n  if (!activities?.length)\r\n    return (\r\n      <div className=\"notifications-list\">\r\n        <div className=\"no-activities-container\">\r\n          <p>No activities</p>\r\n        </div>\r\n      </div>\r\n    )\r\n\r\n  return (\r\n    <section className=\"notifications-list\">\r\n      {activities.map((activity) => (\r\n        <NotificaitonPreview key={activity?._id} activity={activity} />\r\n      ))}\r\n    </section>\r\n  )\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { setCurrPage } from '../store/actions/postActions'\r\nimport { NotificationsList } from '../cmps/notifications/NotificationsList'\r\nimport loadingGif from '../assets/imgs/loading-gif.gif'\r\nimport {\r\n  loadActivities,\r\n  setFilterByActivities,\r\n  setUnreadActivitiesIds,\r\n} from '../store/actions/activityAction'\r\nimport { updateUser } from '../store/actions/userActions'\r\n\r\nfunction Notifications() {\r\n  const dispatch = useDispatch()\r\n  const { loggedInUser } = useSelector((state) => state.userModule)\r\n  const { activities } = useSelector((state) => state.activityModule)\r\n\r\n  const [visibleCount, setVisibleCount] = useState(6)\r\n\r\n  useEffect(() => {\r\n    dispatch(setCurrPage('notifications'))\r\n\r\n    if (loggedInUser?._id) {\r\n      dispatch(setFilterByActivities({ userId: loggedInUser._id }))\r\n      dispatch(loadActivities())\r\n    }\r\n\r\n    return () => {\r\n      if (loggedInUser?._id) {\r\n        updateLastSeenLoggedUser()\r\n        dispatch(setUnreadActivitiesIds())\r\n      }\r\n    }\r\n  }, [dispatch, loggedInUser?._id])\r\n\r\n  const updateLastSeenLoggedUser = () => {\r\n    if (!loggedInUser) return\r\n    const lastSeenActivity = Date.now()\r\n    dispatch(updateUser({ ...loggedInUser, lastSeenActivity }))\r\n  }\r\n\r\n  if (!activities) {\r\n    return (\r\n      <div className=\"message-page\">\r\n        <div className=\"gif-container\">\r\n          <img className=\"loading-gif\" src={loadingGif} alt=\"Loading...\" />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const visibleActivities = activities.slice(0, visibleCount)\r\n\r\n  return (\r\n    <div className=\"notifications-page\">\r\n      <div className=\"side-bar\">\r\n        <div className=\"container\"></div>\r\n      </div>\r\n\r\n      <div className=\"main\">\r\n        <div className=\"container\">\r\n          <NotificationsList activities={visibleActivities} />\r\n          {visibleCount < activities.length && (\r\n            <button \r\n              className=\"show-more-btn\" \r\n              onClick={() => setVisibleCount(prev => prev + 6)}\r\n            >\r\n              Show More\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"aside\">\r\n        <div className=\"container\"></div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notifications\r\n","export default function dateParser(date) {\n  const parsed = new Date(date);\n\n  if (!Number.isNaN(parsed.valueOf())) {\n    return parsed;\n  }\n\n  const parts = String(date).match(/\\d+/g);\n\n  if (parts == null || parts.length <= 2) {\n    return parsed;\n  } else {\n    const [firstP, secondP, ...restPs] = parts.map(x => parseInt(x));\n    const correctedParts = [firstP, secondP - 1, ...restPs];\n    const isoDate = new Date(Date.UTC(...correctedParts));\n    return isoDate;\n  }\n}","export default function defaultFormatter(value, _unit, suffix) {\n  const unit = value !== 1 ? _unit + 's' : _unit;\n  return value + ' ' + unit + ' ' + suffix;\n}","function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport dateParser from './dateParser';\nimport defaultFormatter from './defaultFormatter';\n// Just some simple constants for readability\nconst MINUTE = 60;\nconst HOUR = MINUTE * 60;\nconst DAY = HOUR * 24;\nconst WEEK = DAY * 7;\nconst MONTH = DAY * 30;\nconst YEAR = DAY * 365;\nexport default function TimeAgo({\n  date,\n  formatter = defaultFormatter,\n  component = 'time',\n  live = true,\n  minPeriod = 0,\n  maxPeriod = WEEK,\n  title,\n  now = () => Date.now(),\n  ...passDownProps\n}) {\n  const [timeNow, setTimeNow] = useState(now());\n  useEffect(() => {\n    if (!live) {\n      return;\n    }\n\n    const tick = () => {\n      const then = dateParser(date).valueOf();\n\n      if (!then) {\n        console.warn('[react-timeago] Invalid Date provided');\n        return 0;\n      }\n\n      const seconds = Math.round(Math.abs(timeNow - then) / 1000);\n      const unboundPeriod = seconds < MINUTE ? 1000 : seconds < HOUR ? 1000 * MINUTE : seconds < DAY ? 1000 * HOUR : 1000 * WEEK;\n      const period = Math.min(Math.max(unboundPeriod, minPeriod * 1000), maxPeriod * 1000);\n\n      if (period) {\n        return setTimeout(() => {\n          setTimeNow(now());\n        }, period);\n      }\n\n      return 0;\n    };\n\n    const timeoutId = tick();\n    return () => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n    };\n  }, [date, live, maxPeriod, minPeriod, now, timeNow]);\n  const Komponent = component;\n  const then = dateParser(date).valueOf();\n\n  if (!then) {\n    return null;\n  }\n\n  const seconds = Math.round(Math.abs(timeNow - then) / 1000);\n  const suffix = then < timeNow ? 'ago' : 'from now';\n  const [value, unit] = seconds < MINUTE ? [Math.round(seconds), 'second'] : seconds < HOUR ? [Math.round(seconds / MINUTE), 'minute'] : seconds < DAY ? [Math.round(seconds / HOUR), 'hour'] : seconds < WEEK ? [Math.round(seconds / DAY), 'day'] : seconds < MONTH ? [Math.round(seconds / WEEK), 'week'] : seconds < YEAR ? [Math.round(seconds / MONTH), 'month'] : [Math.round(seconds / YEAR), 'year'];\n  const passDownTitle = typeof title === 'undefined' ? typeof date === 'string' ? date : dateParser(date).toISOString().substr(0, 16).replace('T', ' ') : title;\n  const spreadProps = Komponent === 'time' ? { ...passDownProps,\n    dateTime: dateParser(date).toISOString()\n  } : passDownProps;\n  const nextFormatter = defaultFormatter.bind(null, value, unit, suffix);\n  return /*#__PURE__*/React.createElement(Komponent, _extends({}, spreadProps, {\n    title: passDownTitle\n  }), formatter(value, unit, suffix, then, nextFormatter, now));\n}"],"names":["NotificaitonPreview","activity","history","useHistory","theNotLoggedUser","setTheNotLoggedUser","useState","str","setStr","link","setLink","createdByUser","setCreatedByUser","createdToUser","setCreatedToUser","isActivityUnread","setIsActivityUnread","loggedInUser","useSelector","state","userModule","unreadActivities","activityModule","useEffect","async","type","post","postService","postId","_id","fullname","linkToPost","userId","buildActivityStr","user","createdTo","getTheCreatedToUser","createdBy","getTheCreatedByUser","userService","getTheNotLoggedInUser","some","activityId","className","onClick","push","imgUrl","src","alt","loadingCircle","date","createdAt","NotificationsList","activities","length","map","dispatch","useDispatch","visibleCount","setVisibleCount","setCurrPage","setFilterByActivities","loadActivities","updateLastSeenLoggedUser","setUnreadActivitiesIds","lastSeenActivity","Date","now","updateUser","loadingGif","visibleActivities","slice","prev","dateParser","parsed","Number","isNaN","valueOf","parts","String","match","firstP","secondP","restPs","x","parseInt","correctedParts","UTC","defaultFormatter","value","_unit","suffix","_extends","Object","assign","bind","target","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this","HOUR","MINUTE","DAY","WEEK","MONTH","YEAR","TimeAgo","formatter","component","live","minPeriod","maxPeriod","title","passDownProps","timeNow","setTimeNow","timeoutId","then","console","warn","seconds","Math","round","abs","unboundPeriod","period","min","max","setTimeout","tick","clearTimeout","Komponent","unit","passDownTitle","toISOString","substr","replace","spreadProps","dateTime","nextFormatter","React"],"sourceRoot":""}