{"version":3,"file":"static/js/502.a3cb1c2b.chunk.js","mappings":"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","sources":["cmps/comments/InputComment.jsx","cmps/comments/CommentMenu.jsx","cmps/replies/ReplyPreview.jsx","cmps/replies/ReplyList.jsx","cmps/comments/CommentPreview.jsx","cmps/comments/CommentsList.jsx","cmps/comments/Comments.jsx","cmps/posts/post-preview/PostActions.jsx","cmps/posts/post-preview/PostBody.jsx","cmps/posts/post-preview/PostHeader.jsx","cmps/LikePreview.jsx","cmps/LikeList.jsx","cmps/posts/post-preview/SocialDetails.jsx","cmps/posts/post-preview/PostMenu.jsx","cmps/posts/post-preview/PostPreview.jsx","cmps/profile/ImgPreview.jsx","services/utilService.js","../node_modules/react-timeago/es6/dateParser.js","../node_modules/react-timeago/es6/defaultFormatter.js","../node_modules/react-timeago/es6/index.js"],"sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { useSelector } from 'react-redux'\r\nimport { useState } from 'react'\r\n\r\nexport const InputComment = ({ onSaveComment }) => {\r\n  const { loggedInUser } = useSelector((state) => state.userModule)\r\n  const { imgUrl, _id } = loggedInUser\r\n\r\n  const [isFirstFocus, setIsFirstFocus] = useState(true)\r\n  const [newComment, setNewComment] = useState({\r\n    txt: '',\r\n    userId: _id,\r\n  })\r\n\r\n  const handleChange = async ({ target }) => {\r\n    const field = target.name\r\n    let value = target.type === 'number' ? +target.value || '' : target.value\r\n    setNewComment((prevCred) => ({ ...prevCred, [field]: value }))\r\n  }\r\n\r\n  const doSubmit = () => {\r\n    onSaveComment(newComment)\r\n    setNewComment(() => ({ txt: '', userId: _id }))\r\n  }\r\n\r\n  const inputRef = (elInput) => {\r\n    if (elInput && isFirstFocus) elInput.focus()\r\n    setIsFirstFocus(false)\r\n  }\r\n  return (\r\n    <section>\r\n      <form className=\"input-comment\" action=\"\">\r\n        <div>\r\n          <div className=\"img-profile\">\r\n            <img src={imgUrl} alt=\"\" className=\"img\" />\r\n          </div>\r\n\r\n          <div className=\"input-container\">\r\n            <input\r\n              ref={inputRef}\r\n              type=\"text\"\r\n              placeholder=\"Add a Comment..\"\r\n              required\r\n              onChange={handleChange}\r\n              id=\"txt\"\r\n              name=\"txt\"\r\n              value={newComment.txt}\r\n            />\r\n            <span>\r\n              <FontAwesomeIcon\r\n                className=\"smile icon\"\r\n                icon=\"fa-solid fa-face-smile\"\r\n              />\r\n            </span>\r\n            <span>\r\n              <FontAwesomeIcon\r\n                className=\"photo icon\"\r\n                icon=\"fa-solid fa-image\"\r\n              />\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"post-btn-container\">\r\n          {newComment.txt && (\r\n            <button\r\n              onClick={(ev) => {\r\n                ev.preventDefault()\r\n                doSubmit()\r\n              }}\r\n            >\r\n              Post\r\n            </button>\r\n          )}\r\n        </div>\r\n      </form>\r\n    </section>\r\n  )\r\n}\r\n","import { useSelector } from 'react-redux'\r\nimport { useState } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nexport const CommentMenu = ({ toggleMenu, onRemoveComment, commentUserId }) => {\r\n  const [isAskAgain, setIsAskAgain] = useState(false)\r\n  const { loggedInUser } = useSelector((state) => state.userModule)\r\n\r\n  const isLoggedInUserCanDelete = loggedInUser._id === commentUserId\r\n\r\n  return (\r\n    <section>\r\n      <div\r\n        className=\"bg-menu\"\r\n        onClick={(ev) => {\r\n          ev.stopPropagation()\r\n          toggleMenu()\r\n        }}\r\n      ></div>\r\n      <section className=\"comment-menu\">\r\n        <div className=\"container\">\r\n          {isLoggedInUserCanDelete && (\r\n            <button\r\n              className=\"delete-container\"\r\n              onClick={() => setIsAskAgain((prev) => !prev)}\r\n            >\r\n              <FontAwesomeIcon\r\n                className=\"trash-icon\"\r\n                icon=\"fa-solid fa-trash\"\r\n              />\r\n              <p>Delete comment</p>\r\n            </button>\r\n          )}\r\n        </div>\r\n        {isAskAgain && (\r\n          <div className=\"ask-again\">\r\n            <p>Are you sure?</p>\r\n            <div className=\"opts\">\r\n              <p className=\"yes opt-btn\" onClick={onRemoveComment}>\r\n                yes\r\n              </p>\r\n              <p className=\"no opt-btn\" onClick={() => setIsAskAgain(false)}>\r\n                no\r\n              </p>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </section>\r\n    </section>\r\n  )\r\n}\r\n","import { useSelector } from 'react-redux'\r\nimport { useEffect, useState } from 'react'\r\nimport { userService } from '../../services/user/userService'\r\nimport TimeAgo from 'react-timeago'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nexport const ReplyPreview = ({ reply, updateReply }) => {\r\n  const { userId } = reply\r\n  const { loggedInUser } = useSelector((state) => state.userModule)\r\n  const [userReply, setUserReply] = useState(null)\r\n\r\n  const onLikeReply = () => {\r\n    const replyToUpdate = { ...reply }\r\n    const isAlreadyLike = replyToUpdate.reactions.some(\r\n      (reaction) => reaction.userId === loggedInUser._id\r\n    )\r\n    if (isAlreadyLike) {\r\n      replyToUpdate.reactions = replyToUpdate.reactions.filter(\r\n        (reaction) => reaction.userId !== loggedInUser._id\r\n      )\r\n    } else if (!isAlreadyLike) {\r\n      replyToUpdate.reactions.push({\r\n        userId: loggedInUser._id,\r\n        fullname: loggedInUser.fullname,\r\n        reaction: 'like',\r\n      })\r\n    }\r\n    updateReply(replyToUpdate)\r\n  }\r\n\r\n  const loadUser = async () => {\r\n    const userReply = await userService.getById(userId)\r\n    setUserReply(userReply)\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadUser()\r\n  }, [])\r\n\r\n  if (!userReply) return\r\n\r\n  const isLogedInUserLikeReply = reply?.reactions.some((reaction) => {\r\n    return loggedInUser._id === reaction.userId\r\n  })\r\n\r\n  const likeBtnStyle = isLogedInUserLikeReply ? 'liked' : ''\r\n\r\n  return (\r\n    <section className=\"reply-preview\">\r\n      <div className=\"img-profile-reply\">\r\n        <img src={userReply.imgUrl} alt=\"\" className=\"img\" />\r\n      </div>\r\n      <div className=\"user-container\">\r\n        <div className=\"user-details\">\r\n          <div className=\"details-user-container\">\r\n            <div>\r\n              <h3>{userReply.fullname}</h3>\r\n              <p>{userReply.profession}</p>\r\n            </div>\r\n            <div>\r\n              <TimeAgo date={reply.createdAt}></TimeAgo>\r\n              <span className=\"logo-dots\">\r\n                <FontAwesomeIcon\r\n                  className=\"dots-icon\"\r\n                  icon=\"fa-solid fa-ellipsis\"\r\n                />\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <p className=\"reply-txt\">{reply.txt}</p>\r\n        </div>\r\n        <div className=\"reply-actions\">\r\n          <span>{reply.reactions?.length || ''}</span>\r\n          <button\r\n            className={'like ' + likeBtnStyle}\r\n            onClick={() => onLikeReply()}\r\n          >\r\n            Like\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n","import { useEffect } from 'react'\r\nimport { ReplyPreview } from './ReplyPreview'\r\n\r\nexport const ReplyList = ({ replies, updateReply }) => {\r\n  return (\r\n    <section className=\"reply-list\">\r\n      {replies.map((reply) => (\r\n        <ReplyPreview key={reply._id} reply={reply} updateReply={updateReply} />\r\n      ))}\r\n    </section>\r\n  )\r\n}\r\n","import { useDispatch, useSelector } from 'react-redux'\r\nimport { useEffect, useState } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { removeComment } from '../../store/actions/postActions'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { userService } from '../../services/user/userService'\r\nimport { utilService } from '../../services/utilService'\r\nimport { CommentMenu } from './CommentMenu'\r\nimport { ReplyList } from '../replies/ReplyList'\r\nimport TimeAgo from 'react-timeago'\r\n\r\nexport const CommentPreview = ({ comment, onSaveComment }) => {\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n\r\n  const { userId, createdAt, postId, reactions, replies } = comment\r\n  const [userComment, setUserComment] = useState(null)\r\n  const [isShowinputComment, setIsShowinputComment] = useState(false)\r\n  const [isShowreplyList, setIsShowReplyList] = useState(false)\r\n  const [isShowMenu, setIsShowMenu] = useState(false)\r\n  const [isFirstFocus, setIsFirstFocus] = useState(true)\r\n\r\n  const [replyField, setReplyField] = useState({\r\n    txt: '',\r\n  })\r\n  const { loggedInUser } = useSelector((state) => state.userModule)\r\n\r\n  const toggleMenu = () => {\r\n    setIsShowMenu((prevVal) => !prevVal)\r\n  }\r\n\r\n  const loadUserComment = async (userId) => {\r\n    if (!userId) return\r\n    const userComment = await userService.getById(userId)\r\n    setUserComment(userComment)\r\n  }\r\n\r\n  const onLikeComment = () => {\r\n    const commentToSave = { ...comment }\r\n    const isAlreadyLike = commentToSave.reactions.some(\r\n      (reaction) => reaction.userId === loggedInUser._id\r\n    )\r\n    if (isAlreadyLike) {\r\n      commentToSave.reactions = commentToSave.reactions.filter(\r\n        (reaction) => reaction.userId !== loggedInUser._id\r\n      )\r\n    } else if (!isAlreadyLike) {\r\n      commentToSave.reactions.push({\r\n        userId: loggedInUser._id,\r\n        fullname: loggedInUser.fullname,\r\n        reaction: 'like',\r\n      })\r\n    }\r\n    onSaveComment(commentToSave)\r\n  }\r\n\r\n  const onRemoveComment = () => {\r\n    dispatch(removeComment(comment))\r\n  }\r\n\r\n  const addReply = () => {\r\n    if (replyField.txt === '' || !replyField.txt) return\r\n    const commentToSave = { ...comment }\r\n    setIsShowReplyList(true)\r\n    const newRpely = {\r\n      _id: utilService.makeId(24),\r\n      userId: loggedInUser._id,\r\n      postId: postId,\r\n      commentId: comment._id,\r\n      txt: replyField.txt,\r\n      reactions: [],\r\n      createdAt: new Date().getTime(),\r\n    }\r\n    commentToSave.replies.unshift(newRpely)\r\n    onSaveComment(commentToSave)\r\n    setReplyField({\r\n      txt: '',\r\n    })\r\n  }\r\n\r\n  const updateReply = (replyToUpdate) => {\r\n    const commentToSave = { ...comment }\r\n    const idx = commentToSave.replies.findIndex(\r\n      (reply) => reply._id === replyToUpdate._id\r\n    )\r\n    commentToSave.replies[idx] = replyToUpdate\r\n    onSaveComment(commentToSave)\r\n  }\r\n\r\n  const handleChange = async ({ target }) => {\r\n    const field = target.name\r\n    let value = target.type === 'number' ? +target.value || '' : target.value\r\n    setReplyField({ [field]: value })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadUserComment(userId)\r\n  }, [])\r\n\r\n  if (!userComment) return\r\n\r\n  const isLogedInUserLikeComment = comment?.reactions.some((reaction) => {\r\n    return loggedInUser._id === reaction.userId\r\n  })\r\n\r\n  const likeBtnStyle = isLogedInUserLikeComment ? 'liked' : ''\r\n\r\n  const { profession, imgUrl } = userComment\r\n\r\n  const inputRef = (elInput) => {\r\n    if (elInput && isFirstFocus) elInput.focus()\r\n    setIsFirstFocus(false)\r\n  }\r\n\r\n  if (!comment) return <div>Loading</div>\r\n\r\n  return (\r\n    <section className=\"comment-preview\">\r\n      <div\r\n        className=\"img-container\"\r\n        onClick={() => history.push(`/main/profile/${userComment?._id}`)}\r\n      >\r\n        <img src={imgUrl} alt=\"\" className=\"img-profile\" />\r\n      </div>\r\n      <div className=\"container\">\r\n        <div className=\"comment-header\">\r\n          <div className=\"comment-details\">\r\n            <div className=\"name\">\r\n              <h3>{userComment.fullname}</h3>\r\n              <p>{profession}</p>\r\n            </div>\r\n            <div>\r\n              <span>\r\n                <TimeAgo date={createdAt} />\r\n              </span>\r\n              <FontAwesomeIcon\r\n                onClick={toggleMenu}\r\n                className=\"dots-icon\"\r\n                icon=\"fa-solid fa-ellipsis\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"comment-text\">\r\n            <p>{comment.txt}</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"comment-action\">\r\n          <span>{reactions?.length || ''}</span>\r\n          <button className={'like ' + likeBtnStyle} onClick={onLikeComment}>\r\n            Like\r\n          </button>\r\n          |\r\n          <button onClick={() => setIsShowinputComment((prev) => !prev)}>\r\n            Reply\r\n          </button>\r\n          |\r\n          {comment.replies?.length ? (\r\n            <button onClick={() => setIsShowReplyList((prev) => !prev)}>\r\n              {isShowreplyList && isShowreplyList\r\n                ? `Hide ${comment.replies?.length} replies`\r\n                : `Show ${comment.replies?.length} replies`}\r\n            </button>\r\n          ) : (\r\n            ''\r\n          )}\r\n        </div>\r\n\r\n        {isShowinputComment && (\r\n          <div className=\"input-reply\">\r\n            <div className=\"img-loggedUser\">\r\n              <img src={loggedInUser.imgUrl} alt=\"\" className=\"img\" />\r\n            </div>\r\n            <div className=\"input-container\">\r\n              <input\r\n                ref={inputRef}\r\n                type=\"text\"\r\n                placeholder=\"Add a reply...\"\r\n                onChange={handleChange}\r\n                id=\"txt\"\r\n                name=\"txt\"\r\n                value={replyField.txt}\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {replyField.txt && (\r\n          <button className=\"reply-btn\" onClick={() => addReply()}>\r\n            Reply\r\n          </button>\r\n        )}\r\n\r\n        {isShowreplyList && (\r\n          <ReplyList replies={replies} updateReply={updateReply} />\r\n        )}\r\n\r\n        {isShowMenu && (\r\n          <CommentMenu\r\n            toggleMenu={toggleMenu}\r\n            onRemoveComment={onRemoveComment}\r\n            commentUserId={comment.userId}\r\n          />\r\n        )}\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n","import { CommentPreview } from './CommentPreview'\r\n\r\nexport const CommentsList = ({ comments, onSaveComment }) => {\r\n  if (!comments) return <section className=\"list-comments\">Loading..</section>\r\n\r\n  return (\r\n    <section className=\"list-comments\">\r\n      {comments.map((comment) => (\r\n        <CommentPreview\r\n          key={comment._id}\r\n          comment={comment}\r\n          onSaveComment={onSaveComment}\r\n        />\r\n      ))}\r\n    </section>\r\n  )\r\n}\r\n","import { InputComment } from './InputComment'\r\nimport { CommentsList } from './CommentsList'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { saveComment } from '../../store/actions/postActions'\r\nimport { saveActivity } from '../../store/actions/activityAction'\r\n\r\nexport const Comments = ({ postId, comments, userPostId }) => {\r\n  const dispatch = useDispatch()\r\n  const { loggedInUser } = useSelector((state) => state.userModule)\r\n\r\n  const onSaveComment = async (comment) => {\r\n    const commentToSave = { ...comment, postId }\r\n    dispatch(saveComment(commentToSave)).then((savedComment) => {\r\n      if (savedComment) {\r\n        const newActivity = {\r\n          type: commentToSave._id ? 'update-comment' : 'add-comment',\r\n          description: '',\r\n          createdBy: loggedInUser._id,\r\n          createdTo: userPostId,\r\n          commentId: savedComment._id,\r\n          postId: savedComment.postId,\r\n        }\r\n        dispatch(saveActivity(newActivity))\r\n      }\r\n      return savedComment\r\n    })\r\n  }\r\n\r\n  if (!comments) return <div>Loading</div>\r\n  return (\r\n    <section className=\"comments\">\r\n      <InputComment onSaveComment={onSaveComment} />\r\n      <CommentsList\r\n        postId={postId}\r\n        comments={comments}\r\n        onSaveComment={onSaveComment}\r\n      />\r\n    </section>\r\n  )\r\n}\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nexport const PostActions = ({\r\n  post,\r\n  onToggleShowComment,\r\n  onLikePost,\r\n  onSharePost,\r\n  loggedInUser,\r\n}) => {\r\n  const history = useHistory()\r\n\r\n  const isLogedInUserLikePost = post?.reactions?.some((reaction) => {\r\n    return (\r\n      loggedInUser && loggedInUser._id && loggedInUser?._id === reaction.userId\r\n    )\r\n  })\r\n\r\n  const likeBtnStyle = isLogedInUserLikePost ? 'liked' : ''\r\n  return (\r\n    <section className=\"post-actions\">\r\n      <button className={'like ' + likeBtnStyle} onClick={onLikePost}>\r\n        <FontAwesomeIcon\r\n          className=\"like-icon icon\"\r\n          icon=\"fa-solid fa-thumbs-up\"\r\n        />\r\n        <span>Like</span>\r\n      </button>\r\n      <button className=\"comment\" onClick={onToggleShowComment}>\r\n        <FontAwesomeIcon\r\n          className=\"comment-icon icon\"\r\n          icon=\"fa-solid fa-comment\"\r\n        />\r\n        <span>Comment</span>\r\n      </button>\r\n      <button className=\"share\" onClick={() => onSharePost()}>\r\n        <FontAwesomeIcon className=\"share-icon icon\" icon=\"fa-solid fa-share\" />\r\n        <span>Share</span>\r\n      </button>\r\n      <button\r\n        className=\"send\"\r\n        onClick={() => history.push(`/main/message/${post.userId}`)}\r\n      >\r\n        <FontAwesomeIcon\r\n          className=\"send-icon icon\"\r\n          icon=\"fa-solid fa-paper-plane\"\r\n        />\r\n        <span>Send</span>\r\n      </button>\r\n    </section>\r\n  )\r\n}\r\n","export function PostBody({\r\n  body,\r\n  imgUrl,\r\n  videoUrl,\r\n  toggleShowImgPreview,\r\n  link,\r\n  title,\r\n}) {\r\n  return (\r\n    <section className=\"post-body\">\r\n      <div className=\"title\">\r\n        <h1>{title}</h1>\r\n      </div>\r\n      <div className=\"post-text\">\r\n        <p>{body}</p>\r\n      </div>\r\n      <div className=\"link\">\r\n        {link && (\r\n          <a href={link} target=\"_blank\" rel=\"noreferrer\">\r\n            <span className=\"the-link\">{link}</span>\r\n          </a>\r\n        )}\r\n      </div>\r\n      <div className=\"img-container\" onClick={toggleShowImgPreview}>\r\n        {imgUrl && <img src={imgUrl} alt=\"\" />}\r\n      </div>\r\n      <div className=\"video-container\">\r\n        {videoUrl && (\r\n          <video width=\"100%\" height=\"300\" controls>\r\n            <source src={videoUrl} type=\"video/mp4\" />\r\n          </video>\r\n        )}\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport TimeAgo from 'react-timeago'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport loadingCircle from '../../../assets/imgs/loading-circle.gif'\r\n\r\nexport const PostHeader = ({ post, userPost }) => {\r\n  const history = useHistory()\r\n\r\n  if (!userPost)\r\n    return (\r\n      <section className=\"post-header\">\r\n        <img className=\"loading-circle\" src={loadingCircle} alt=\"\" />\r\n      </section>\r\n    )\r\n\r\n  const { imgUrl, profession, fullname } = userPost\r\n  return (\r\n    <section className=\"post-header\">\r\n      <div\r\n        className=\"img-actor\"\r\n        onClick={() => history.push(`/main/profile/${userPost?._id}`)}\r\n      >\r\n        <img src={imgUrl} className=\"img\"></img>\r\n      </div>\r\n\r\n      <div className=\"details\">\r\n        <Link to={`/main/profile/${userPost?._id}`}>\r\n          <div className=\"name\">\r\n            <h3>{fullname}</h3>\r\n          </div>\r\n        </Link>\r\n        <div\r\n          className=\"time-and-description-container\"\r\n          onClick={() => history.push(`/main/post/${post.userId}/${post._id}`)}\r\n        >\r\n          <div className=\"description\">\r\n            <p>{profession}</p>\r\n          </div>\r\n          <div className=\"time\">\r\n            <span>\r\n              <TimeAgo date={post.createdAt} />\r\n            </span>{' '}\r\n            {post?.position?.lat && post?.position?.lng && (\r\n              <span className=\"logo-location\">\r\n                <FontAwesomeIcon icon=\"fa-solid fa-location-dot\" />\r\n              </span>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { userService } from '../services/user/userService'\r\n\r\nexport function LikePreview({ reaction }) {\r\n  const [user, setUser] = useState(null)\r\n\r\n  const history = useHistory()\r\n\r\n  const loadUser = async (id) => {\r\n    if (!reaction) return\r\n    const userPost = await userService.getById(id)\r\n    setUser(() => userPost)\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadUser(reaction.userId)\r\n  }, [])\r\n\r\n  if (!user) return\r\n\r\n  return (\r\n    <section className=\"like-preview\">\r\n      <div\r\n        className=\"container-name\"\r\n        onClick={() => history.push(`/main/profile/${user._id}`)}\r\n      >\r\n        <div className=\"img-container\">\r\n          <img src={user.imgUrl} alt=\"\" className=\"img\" />\r\n        </div>\r\n        <div className=\"fullname\">\r\n          <p>{user.fullname}</p>\r\n          <p>{user.profession}</p>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <button>Connect</button>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { utilService } from '../services/utilService'\r\nimport { LikePreview } from './LikePreview'\r\n\r\nexport function LikeList({ reactions, toggleLikes }) {\r\n  return (\r\n    <section className=\"like-list\">\r\n      <div className=\"title\">\r\n        <h2>Reactions:</h2>\r\n        <FontAwesomeIcon\r\n          onClick={() => toggleLikes()}\r\n          className=\"logo-close\"\r\n          icon=\"fa-solid fa-x\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <div className=\"all\">\r\n          <p>All {reactions?.length}</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"list\">\r\n        {reactions.map((reaction) => (\r\n          <LikePreview key={utilService.makeId()} reaction={reaction} />\r\n        ))}\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n","import { useState } from 'react'\r\nimport { LikeList } from '../../LikeList'\r\n\r\nexport function SocialDetails({ comments, shares, post, onToggleShowComment }) {\r\n  const [isShowLikes, setisShowLikes] = useState(false)\r\n\r\n  const toggleLikes = () => {\r\n    setisShowLikes((prevVal) => !prevVal)\r\n  }\r\n\r\n  if (!comments) return\r\n  return (\r\n    <section className=\"social-details\">\r\n      <div className=\"likes-count\">\r\n        <span onClick={toggleLikes}>\r\n          {!post.reactions?.length\r\n            ? ''\r\n            : post.reactions?.length > 1\r\n            ? post.reactions?.length + ' likes'\r\n            : '1 like'}\r\n        </span>\r\n      </div>\r\n      <div className=\"share-comment\">\r\n        <div className=\"comment-count\" onClick={onToggleShowComment}>\r\n          <p>\r\n            {!comments?.length\r\n              ? ''\r\n              : comments?.length > 1\r\n              ? comments?.length + ' comments'\r\n              : '1 comment'}\r\n          </p>\r\n        </div>\r\n        <div className=\"share-count\">\r\n          <p>\r\n            {!shares?.length\r\n              ? ''\r\n              : shares?.length > 1\r\n              ? shares?.length + ' shares'\r\n              : '1 share'}\r\n          </p>\r\n        </div>\r\n      </div>\r\n      {isShowLikes && (\r\n        <div\r\n          className=\"likes-container\"\r\n          onClick={(ev) => {\r\n            ev.stopPropagation()\r\n            toggleLikes()\r\n          }}\r\n        >\r\n          <div\r\n            className=\"likes\"\r\n            onClick={(ev) => {\r\n              ev.stopPropagation()\r\n            }}\r\n          >\r\n            <LikeList reactions={post.reactions} toggleLikes={toggleLikes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </section>\r\n  )\r\n}\r\n","import { useSelector } from 'react-redux'\r\nimport { useState } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nexport const PostMenu = ({\r\n  toggleMenu,\r\n  onRemovePost,\r\n  postUserId,\r\n  copyToClipBoard,\r\n}) => {\r\n  const { loggedInUser } = useSelector((state) => state.userModule)\r\n\r\n  const [isAskAgain, setIsAskAgain] = useState(false)\r\n\r\n  const isLoggedInUserCanDelete = loggedInUser._id === postUserId\r\n\r\n  return (\r\n    <section>\r\n      <div\r\n        className=\"bg-menu\"\r\n        onClick={(ev) => {\r\n          ev.stopPropagation()\r\n          toggleMenu()\r\n        }}\r\n      ></div>\r\n      <section className=\"post-menu\">\r\n        {isLoggedInUserCanDelete && (\r\n          <div className=\"container\">\r\n            <button\r\n              className=\"delete-container \"\r\n              onClick={() => setIsAskAgain((prev) => !prev)}\r\n            >\r\n              <FontAwesomeIcon\r\n                className=\"trash-icon\"\r\n                icon=\"fa-solid fa-trash\"\r\n              />\r\n              <p>Delete post</p>\r\n            </button>\r\n          </div>\r\n        )}\r\n        {isAskAgain && (\r\n          <div className=\"ask-again\">\r\n            <p>Are you sure?</p>\r\n            <div className=\"opts\">\r\n              <p className=\"yes opt-btn\" onClick={onRemovePost}>\r\n                yes\r\n              </p>\r\n              <p className=\"no opt-btn\" onClick={() => setIsAskAgain(false)}>\r\n                no\r\n              </p>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"copy-to-clip-board\">\r\n          <button\r\n            onClick={(ev) => {\r\n              ev.stopPropagation()\r\n              toggleMenu()\r\n              copyToClipBoard()\r\n            }}\r\n          >\r\n            <FontAwesomeIcon icon=\"fa-solid fa-copy\" />\r\n            <p>Copy link to post</p>\r\n          </button>\r\n        </div>\r\n      </section>\r\n    </section>\r\n  )\r\n}\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Comments } from '../../comments/Comments'\r\nimport { PostActions } from './PostActions'\r\nimport { PostBody } from './PostBody'\r\nimport { PostHeader } from './PostHeader'\r\nimport { SocialDetails } from './SocialDetails'\r\nimport { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { userService } from '../../../services/user/userService'\r\n\r\nimport { PostMenu } from './PostMenu'\r\nimport { savePost, removePost } from '../../../store/actions/postActions'\r\nimport { saveActivity } from '../../../store/actions/activityAction'\r\nimport { ImgPreview } from '../../profile/ImgPreview'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nexport const PostPreview = ({ post }) => {\r\n  const dispatch = useDispatch()\r\n  const params = useParams()\r\n\r\n  const [userPost, setUserPost] = useState(null)\r\n  const [isShowComments, setIsShowComments] = useState(false)\r\n  const [isShowMenu, setIsShowMenu] = useState(false)\r\n  const [isShowImgPreview, setIsShowImgPreview] = useState(false)\r\n\r\n  const { loggedInUser } = useSelector((state) => state.userModule)\r\n\r\n  useEffect(() => {\r\n    loadUserPost(post.userId)\r\n    if (params.postId) setIsShowComments(true)\r\n  }, [loggedInUser])\r\n\r\n  const toggleMenu = () => {\r\n    setIsShowMenu((prevVal) => !prevVal)\r\n  }\r\n\r\n  const toggleShowImgPreview = () => {\r\n    setIsShowImgPreview((prev) => !prev)\r\n  }\r\n\r\n  const loadUserPost = async (id) => {\r\n    if (!post) return\r\n    const userPost = await userService.getById(id)\r\n    setUserPost(() => userPost)\r\n  }\r\n\r\n  const onToggleShowComment = () => {\r\n    setIsShowComments((prev) => !prev)\r\n  }\r\n\r\n  const onSharePost = async () => {\r\n    const shareData = {\r\n      title: 'Post',\r\n      text: 'a post from Travelsdin',\r\n      url: `/main/post/${post.userId}/${post._id}`,\r\n    }\r\n\r\n    try {\r\n      await navigator.share(shareData)\r\n    } catch (err) {\r\n      console.log(`Error: ${err}`)\r\n    }\r\n  }\r\n\r\n  const onLikePost = () => {\r\n    const isAlreadyLike = post.reactions.some(\r\n      (reaction) => reaction.userId === loggedInUser._id\r\n    )\r\n    if (isAlreadyLike) {\r\n      post.reactions = post.reactions.filter(\r\n        (reaction) => reaction.userId !== loggedInUser._id\r\n      )\r\n    } else if (!isAlreadyLike) {\r\n      post.reactions.push({\r\n        userId: loggedInUser._id,\r\n        fullname: loggedInUser.fullname,\r\n        reaction: 'like',\r\n      })\r\n    }\r\n\r\n    dispatch(savePost(post)).then((savedPost) => {\r\n      if (savedPost?._id === post._id) {\r\n        const newActivity = {\r\n          type: isAlreadyLike ? 'remove-like' : 'add-like',\r\n          createdBy: loggedInUser._id,\r\n          createdTo: post.userId,\r\n          postId: post._id,\r\n        }\r\n        dispatch(saveActivity(newActivity))\r\n      }\r\n    })\r\n  }\r\n\r\n  const onRemovePost = () => {\r\n    dispatch(removePost(post._id))\r\n  }\r\n\r\n  function copyToClipBoard() {\r\n    const postUrl = `https://travelsdin-express-production.up.railway.app/#/main/post/${post.userId}/${post._id}`\r\n    /* Copy the text inside the text field */\r\n    navigator.clipboard.writeText(postUrl)\r\n    // alert('Copied the text: ' + postUrl)\r\n  }\r\n\r\n  return (\r\n    <section className=\"post-preview\">\r\n      <div className=\"menu\" onClick={toggleMenu}>\r\n        <FontAwesomeIcon className=\"dots-icon\" icon=\"fa-solid fa-ellipsis\" />\r\n      </div>\r\n      <PostHeader post={post} userPost={userPost} />\r\n      <PostBody\r\n        body={post.body}\r\n        imgUrl={post.imgBodyUrl}\r\n        videoUrl={post.videoBodyUrl}\r\n        link={post.link}\r\n        title={post.title}\r\n        toggleShowImgPreview={toggleShowImgPreview}\r\n      />\r\n      <SocialDetails\r\n        comments={post.comments}\r\n        post={post}\r\n        onToggleShowComment={onToggleShowComment}\r\n      />\r\n      <hr />\r\n      <PostActions\r\n        post={post}\r\n        onToggleShowComment={onToggleShowComment}\r\n        onLikePost={onLikePost}\r\n        loggedInUser={loggedInUser}\r\n        onSharePost={onSharePost}\r\n      />\r\n\r\n      {isShowComments && (\r\n        <Comments\r\n          comments={post.comments}\r\n          postId={post._id}\r\n          userPostId={post.userId}\r\n        />\r\n      )}\r\n\r\n      {isShowMenu && (\r\n        <PostMenu\r\n          toggleMenu={toggleMenu}\r\n          onRemovePost={onRemovePost}\r\n          postUserId={post.userId}\r\n          copyToClipBoard={copyToClipBoard}\r\n        />\r\n      )}\r\n\r\n      {isShowImgPreview && (\r\n        <ImgPreview\r\n          toggleShowImg={toggleShowImgPreview}\r\n          imgUrl={post.imgBodyUrl}\r\n          title=\"Image\"\r\n        />\r\n      )}\r\n    </section>\r\n  )\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { userService } from '../../services/user/userService'\r\n\r\nexport function ImgPreview({\r\n  toggleShowImg,\r\n  imgUrl,\r\n  videoUrl,\r\n  title,\r\n  post,\r\n  body,\r\n}) {\r\n  const history = useHistory()\r\n\r\n  const [user, setUser] = useState(null)\r\n\r\n  const loadUser = async (userId) => {\r\n    const user = await userService.getById(userId)\r\n    setUser(user)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (post?.userId) loadUser(post.userId)\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"img-profile-preview\">\r\n      <div className=\"bg\" onClick={toggleShowImg}></div>\r\n      <section className=\"container\">\r\n        <div className=\"title\">\r\n          {(user && post && (\r\n            <div\r\n              className=\"user-details\"\r\n              onClick={() => history.push(`/main/profile/${post.userId}`)}\r\n            >\r\n              <img src={user.imgUrl} alt=\"\" className=\"img\" />\r\n              <p className=\"fullname\">{user.fullname}</p>\r\n            </div>\r\n          )) ||\r\n            (post && <p className=\"user-details\">Loading user...</p>)}\r\n\r\n          <p>{title}</p>\r\n\r\n          <span className=\"logo-close\" onClick={toggleShowImg}>\r\n            <FontAwesomeIcon icon=\"fa-solid fa-x\" />\r\n          </span>\r\n        </div>\r\n\r\n        {body && (\r\n          <div>\r\n            <p className=\"body\">{body}</p>\r\n          </div>\r\n        )}\r\n\r\n        {post && (\r\n          <div className=\"see-post\">\r\n            <p\r\n              onClick={() =>\r\n                history.push(`/main/post/${post.userId}/${post._id}`)\r\n              }\r\n            >\r\n              See original post\r\n            </p>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"img-container\">\r\n          {(imgUrl && <img className=\"img\" src={imgUrl} alt=\"\" />) ||\r\n            (videoUrl && (\r\n              <div>\r\n                <video width=\"100%\" height=\"300\" controls>\r\n                  <source src={videoUrl} type=\"video/mp4\" />\r\n                </video>\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\n","export const utilService = {\r\n  makeId,\r\n  debounce,\r\n  getRandomInt,\r\n  getRandomColor,\r\n  getLoremIpsum,\r\n  loadFromStorage,\r\n  saveToStorage,\r\n  loadFromSessionStorage,\r\n  saveToSessionStorage,\r\n  delay,\r\n}\r\nfunction makeId(length = 5) {\r\n  var txt = ''\r\n  var possible =\r\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n  for (var i = 0; i < length; i++) {\r\n    txt += possible.charAt(Math.floor(Math.random() * possible.length))\r\n  }\r\n  return txt\r\n}\r\n\r\nfunction delay(ms = 1500) {\r\n  return new Promise((resolve) => {\r\n    setTimeout(resolve, ms)\r\n  })\r\n}\r\n\r\nfunction debounce(func, wait) {\r\n  let timeout\r\n\r\n  return function executedFunction(...args) {\r\n    //rest-makes the args to an array\r\n    const later = () => {\r\n      clearTimeout(timeout)\r\n      func(...args) //spread-from array to vars\r\n    }\r\n\r\n    clearTimeout(timeout)\r\n    timeout = setTimeout(later, wait)\r\n  }\r\n}\r\n\r\nfunction getRandomColor() {\r\n  var color = '#'\r\n  for (var i = 0; i < 6; i++) {\r\n    color += Math.floor(Math.random() * 10)\r\n  }\r\n  return color\r\n}\r\n\r\nfunction getRandomInt(min, max) {\r\n  min = Math.ceil(min)\r\n  max = Math.floor(max)\r\n  return Math.floor(Math.random() * (max - min) + min) //The maximum is exclusive and the minimum is inclusive\r\n}\r\n\r\nfunction getLoremIpsum(length = 5) {\r\n  const words = [\r\n    'The sky',\r\n    'above',\r\n    'the port',\r\n    'was',\r\n    'the color of television',\r\n    'tuned',\r\n    'to',\r\n    'a dead channel',\r\n    '.',\r\n    'All',\r\n    'this happened',\r\n    'more or less',\r\n    '.',\r\n    'I',\r\n    'had',\r\n    'the story',\r\n    'bit by bit',\r\n    'from various people',\r\n    'and',\r\n    'as generally',\r\n    'happens',\r\n    'in such cases',\r\n    'each time',\r\n    'it',\r\n    'was',\r\n    'a different story',\r\n    '.',\r\n    'It',\r\n    'was',\r\n    'a pleasure',\r\n    'to',\r\n    'burn',\r\n  ]\r\n  let sentence = ''\r\n  while (length > 0) {\r\n    sentence += words[getRandomInt(0, words.length - 1)] + ' '\r\n    length--\r\n  }\r\n  sentence += '.'\r\n  return sentence.trim()\r\n}\r\n\r\nfunction loadFromStorage(key) {\r\n  var val = localStorage.getItem(key)\r\n  return val ? JSON.parse(val) : null\r\n}\r\n\r\nfunction saveToStorage(key, val) {\r\n  localStorage[key] = JSON.stringify(val)\r\n}\r\n\r\nfunction loadFromSessionStorage(key) {\r\n  var val = sessionStorage.getItem(key)\r\n  return val ? JSON.parse(val) : null\r\n}\r\n\r\nfunction saveToSessionStorage(key, val) {\r\n  sessionStorage[key] = JSON.stringify(val)\r\n}\r\n","export default function dateParser(date) {\n  const parsed = new Date(date);\n\n  if (!Number.isNaN(parsed.valueOf())) {\n    return parsed;\n  }\n\n  const parts = String(date).match(/\\d+/g);\n\n  if (parts == null || parts.length <= 2) {\n    return parsed;\n  } else {\n    const [firstP, secondP, ...restPs] = parts.map(x => parseInt(x));\n    const correctedParts = [firstP, secondP - 1, ...restPs];\n    const isoDate = new Date(Date.UTC(...correctedParts));\n    return isoDate;\n  }\n}","export default function defaultFormatter(value, _unit, suffix) {\n  const unit = value !== 1 ? _unit + 's' : _unit;\n  return value + ' ' + unit + ' ' + suffix;\n}","function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport dateParser from './dateParser';\nimport defaultFormatter from './defaultFormatter';\n// Just some simple constants for readability\nconst MINUTE = 60;\nconst HOUR = MINUTE * 60;\nconst DAY = HOUR * 24;\nconst WEEK = DAY * 7;\nconst MONTH = DAY * 30;\nconst YEAR = DAY * 365;\nexport default function TimeAgo({\n  date,\n  formatter = defaultFormatter,\n  component = 'time',\n  live = true,\n  minPeriod = 0,\n  maxPeriod = WEEK,\n  title,\n  now = () => Date.now(),\n  ...passDownProps\n}) {\n  const [timeNow, setTimeNow] = useState(now());\n  useEffect(() => {\n    if (!live) {\n      return;\n    }\n\n    const tick = () => {\n      const then = dateParser(date).valueOf();\n\n      if (!then) {\n        console.warn('[react-timeago] Invalid Date provided');\n        return 0;\n      }\n\n      const seconds = Math.round(Math.abs(timeNow - then) / 1000);\n      const unboundPeriod = seconds < MINUTE ? 1000 : seconds < HOUR ? 1000 * MINUTE : seconds < DAY ? 1000 * HOUR : 1000 * WEEK;\n      const period = Math.min(Math.max(unboundPeriod, minPeriod * 1000), maxPeriod * 1000);\n\n      if (period) {\n        return setTimeout(() => {\n          setTimeNow(now());\n        }, period);\n      }\n\n      return 0;\n    };\n\n    const timeoutId = tick();\n    return () => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n    };\n  }, [date, live, maxPeriod, minPeriod, now, timeNow]);\n  const Komponent = component;\n  const then = dateParser(date).valueOf();\n\n  if (!then) {\n    return null;\n  }\n\n  const seconds = Math.round(Math.abs(timeNow - then) / 1000);\n  const suffix = then < timeNow ? 'ago' : 'from now';\n  const [value, unit] = seconds < MINUTE ? [Math.round(seconds), 'second'] : seconds < HOUR ? [Math.round(seconds / MINUTE), 'minute'] : seconds < DAY ? [Math.round(seconds / HOUR), 'hour'] : seconds < WEEK ? [Math.round(seconds / DAY), 'day'] : seconds < MONTH ? [Math.round(seconds / WEEK), 'week'] : seconds < YEAR ? [Math.round(seconds / MONTH), 'month'] : [Math.round(seconds / YEAR), 'year'];\n  const passDownTitle = typeof title === 'undefined' ? typeof date === 'string' ? date : dateParser(date).toISOString().substr(0, 16).replace('T', ' ') : title;\n  const spreadProps = Komponent === 'time' ? { ...passDownProps,\n    dateTime: dateParser(date).toISOString()\n  } : passDownProps;\n  const nextFormatter = defaultFormatter.bind(null, value, unit, suffix);\n  return /*#__PURE__*/React.createElement(Komponent, _extends({}, spreadProps, {\n    title: passDownTitle\n  }), formatter(value, unit, suffix, then, nextFormatter, now));\n}"],"names":["InputComment","onSaveComment","loggedInUser","useSelector","state","userModule","imgUrl","_id","isFirstFocus","setIsFirstFocus","useState","newComment","setNewComment","txt","userId","className","action","src","alt","ref","elInput","focus","type","placeholder","required","onChange","async","target","field","name","value","prevCred","id","icon","onClick","ev","preventDefault","CommentMenu","toggleMenu","onRemoveComment","commentUserId","isAskAgain","setIsAskAgain","isLoggedInUserCanDelete","stopPropagation","prev","ReplyPreview","reply","updateReply","userReply","setUserReply","useEffect","userService","loadUser","likeBtnStyle","reactions","some","reaction","fullname","profession","date","createdAt","length","replyToUpdate","isAlreadyLike","filter","push","onLikeReply","ReplyList","replies","map","CommentPreview","comment","dispatch","useDispatch","history","useHistory","postId","userComment","setUserComment","isShowinputComment","setIsShowinputComment","isShowreplyList","setIsShowReplyList","isShowMenu","setIsShowMenu","replyField","setReplyField","prevVal","loadUserComment","commentToSave","newRpely","utilService","commentId","Date","getTime","unshift","addReply","idx","findIndex","removeComment","CommentsList","comments","Comments","userPostId","saveComment","then","savedComment","newActivity","description","createdBy","createdTo","saveActivity","PostActions","post","onToggleShowComment","onLikePost","onSharePost","PostBody","body","videoUrl","toggleShowImgPreview","link","title","href","rel","width","height","controls","PostHeader","userPost","loadingCircle","to","position","lat","lng","LikePreview","user","setUser","LikeList","toggleLikes","SocialDetails","shares","isShowLikes","setisShowLikes","PostMenu","onRemovePost","postUserId","copyToClipBoard","PostPreview","params","useParams","setUserPost","isShowComments","setIsShowComments","isShowImgPreview","setIsShowImgPreview","loadUserPost","imgBodyUrl","videoBodyUrl","savePost","savedPost","shareData","text","url","navigator","share","err","console","log","removePost","postUrl","clipboard","writeText","ImgPreview","toggleShowImg","makeId","possible","i","charAt","Math","floor","random","debounce","func","wait","timeout","args","later","clearTimeout","setTimeout","getRandomInt","getRandomColor","color","getLoremIpsum","words","sentence","trim","loadFromStorage","key","val","localStorage","getItem","JSON","parse","saveToStorage","stringify","loadFromSessionStorage","sessionStorage","saveToSessionStorage","delay","ms","Promise","resolve","min","max","ceil","dateParser","parsed","Number","isNaN","valueOf","parts","String","match","firstP","secondP","restPs","x","parseInt","correctedParts","UTC","defaultFormatter","_unit","suffix","_extends","Object","assign","bind","arguments","source","prototype","hasOwnProperty","call","apply","this","HOUR","MINUTE","DAY","WEEK","MONTH","YEAR","TimeAgo","formatter","component","live","minPeriod","maxPeriod","now","passDownProps","timeNow","setTimeNow","timeoutId","warn","seconds","round","abs","unboundPeriod","period","tick","Komponent","unit","passDownTitle","toISOString","substr","replace","spreadProps","dateTime","nextFormatter","React"],"sourceRoot":""}