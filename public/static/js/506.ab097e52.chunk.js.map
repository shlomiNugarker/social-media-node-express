{"version":3,"file":"static/js/506.ab097e52.chunk.js","mappings":"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","sources":["../node_modules/@strg/react-snip/dist/index.es.js","cmps/message/MsgPreview.jsx","cmps/message/ListMsg.jsx","cmps/message/ThreadMsgPreview.jsx","cmps/message/ThreadMsgList.jsx","cmps/message/SendMessageForm.jsx","cmps/message/MessageThread.jsx","cmps/message/Messaging.jsx","pages/Message.jsx","services/utilService.js","../node_modules/react-timeago/es6/dateParser.js","../node_modules/react-timeago/es6/defaultFormatter.js","../node_modules/react-timeago/es6/index.js"],"sourcesContent":["import React,{useRef as useRef,useLayoutEffect as useLayoutEffect,Children as Children,isValidElement as isValidElement,cloneElement as cloneElement}from\"react\";var snipTextCSS=function(e,t){var n=t.current,t=n.options,n=n.element;e.current.textContent=n.fullText,e.current.style.display=\"-webkit-box\",e.current.style.webkitLineClamp=\"\"+t.lines,e.current.style.webkitBoxOrient=\"vertical\",e.current.style.overflow=\"hidden\"},addObserver=function(e,t){var n=t.current.element,r=n.observer||new ResizeObserver(function(){e.current.clientWidth===n.prevWidth&&e.current.clientHeight===n.prevHeight||snipText(e,t)});r.observe(e.current),n.observer=r},destroyObserver=function(e,t){t=t.current.element;t.observer&&(t.observer.disconnect(),t.prevWidth=null,t.prevHeight=null,t.observer=null)},UA_LINE_HEIGHT=1.2,elementLines=function(e){var t=window.getComputedStyle(e),e=parseInt(t.height),t=\"normal\"===t.lineHeight?parseInt(t.fontSize)*UA_LINE_HEIGHT:parseInt(t.lineHeight);return 0===e&&0===t?0:Math.ceil(e/t)},defaultOptions={method:\"css\",lines:3,midWord:!0,ellipsis:\". . .\"},supportsWebkitClamp=function(){return\"undefined\"!=typeof CSS&&CSS.supports(\"display\",\"-webkit-box\")&&CSS.supports(\"-webkit-line-clamp\",\"3\")&&CSS.supports(\"-webkit-box-orient\",\"vertical\")},getOptions=function(e){var t;return{method:supportsWebkitClamp()?null!==(t=null==e?void 0:e.method)&&void 0!==t?t:defaultOptions.method:\"js\",lines:null!==(t=null==e?void 0:e.lines)&&void 0!==t?t:defaultOptions.lines,midWord:null!==(t=null==e?void 0:e.midWord)&&void 0!==t?t:defaultOptions.midWord,ellipsis:null!==(e=null==e?void 0:e.ellipsis)&&void 0!==e?e:defaultOptions.ellipsis}},snipTextJS=function(i,e){var s,e=e.current,l=e.options,e=e.element;i.current.style.display=null,i.current.style.webkitLineClamp=null,i.current.style.webkitBoxOrient=null,i.current.style.overflow=null,i.current.textContent=e.fullText,l.lines<=0||elementLines(i.current)<=l.lines||(s={unprocessed:e.fullText,processed:\"\"},(l.midWord?[\". \",\", \",\" \",\"\"]:[\". \",\", \",\" \"]).forEach(function(e){for(var t=0,n=s.unprocessed.split(e);t<n.length;t++){var r=n[t];if(i.current.textContent=\"\"+s.processed+r+e+l.ellipsis,elementLines(i.current)>l.lines){s.unprocessed=r;break}s.processed=\"\"+s.processed+r+e}}),i.current.textContent=\"\"+s.processed.trim()+l.ellipsis)},snipText=function(e,t){var n=t.current,r=n.options,n=n.element;\"css\"!==r.method?\"js\"===r.method&&(snipTextJS(e,t),n.prevWidth=e.current.clientWidth,n.prevHeight=e.current.clientHeight):snipTextCSS(e,t)},useSnip=function(i,e){var s=useRef({});useLayoutEffect(function(){s.current.options=getOptions(e)},[e]),useLayoutEffect(function(){s.current.element={fullText:i.current.textContent}},[i]),useLayoutEffect(function(){var e=\"undefined\"!=typeof ResizeObserver,t=\"js\"===s.current.options.method,n=!!s.current.element.observer,r=e&&t&&!n,t=e&&!t&&n;return r&&addObserver(i,s),t&&destroyObserver(i,s),r||snipText(i,s),function(){return n&&destroyObserver(i,s)}},[i,s.current.options])},ReactSnip=function(e){var t=e.children,n=e.method,r=e.lines,i=e.midWord,e=e.ellipsis,s=useRef(null);useSnip(s,{method:n,lines:r,midWord:i,ellipsis:e});var l=function(e){return 1<Children.count(e)||!isValidElement(e)?React.createElement(\"div\",{ref:s},e):isValidElement(e.props.children)?cloneElement(e,{children:l(e.props.children)}):cloneElement(e,{ref:s})};return l(t)};export{ReactSnip as ReactSnip};\n","import { useSelector } from 'react-redux'\r\nimport { ReactSnip } from '@strg/react-snip'\r\nimport { useEffect, useState } from 'react'\r\nimport loadingGif from '../../assets/imgs/loading-circle.gif'\r\n\r\nexport function MsgPreview({\r\n  chat,\r\n  chats,\r\n  setMessagesToShow,\r\n  setChatWith,\r\n  chatWith,\r\n  chooseenChatId,\r\n  setChooseenChatId,\r\n  getTheNotLoggedUserChat,\r\n}) {\r\n  const [theNotLoggedUserChat, setTheNotLoggedUserChat] = useState(null)\r\n  const [unreadMsgsCount, setUnreadMsgsCount] = useState(0)\r\n\r\n  const { unreadMessages } = useSelector((state) => state.activityModule)\r\n\r\n  const getUnreadCountMsgs = () => {\r\n    let countMsgs = 0\r\n    unreadMessages.forEach((chatId) => {\r\n      if (chat._id === chatId) countMsgs++\r\n    })\r\n    setUnreadMsgsCount(countMsgs)\r\n  }\r\n\r\n  const lastMsg =\r\n    chat.messages[chat.messages?.length - 1]?.txt || 'No Messages yet..'\r\n  const dateToShow = new Date(chat.messages[0]?.createdAt || chat.createdAt)\r\n  const slicedDate = dateToShow.toLocaleDateString().slice(0, -5)\r\n\r\n  const loadNotLoggedUser = async (chat) => {\r\n    const user = await getTheNotLoggedUserChat(chat)\r\n    setTheNotLoggedUserChat(user)\r\n  }\r\n\r\n  const onClickChat = () => {\r\n    setMessagesToShow(chat.messages)\r\n    setChatWith(theNotLoggedUserChat)\r\n    setChooseenChatId(chat._id)\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadNotLoggedUser(chat)\r\n    getUnreadCountMsgs()\r\n    return () => {}\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    setMessagesToShow(chat.messages)\r\n    setChooseenChatId(chat._id)\r\n    return () => {}\r\n  }, [chat, chats])\r\n\r\n  const isChatChooseen = chooseenChatId === chat._id ? 'chooseen-chat' : ''\r\n  const containerStyle = `container ${isChatChooseen}`\r\n\r\n  if (!theNotLoggedUserChat)\r\n    return (\r\n      <div className=\"msg-preview\">\r\n        <span className=\"loading-circle\">\r\n          <img src={loadingGif} alt=\"\" />\r\n        </span>\r\n      </div>\r\n    )\r\n\r\n  return (\r\n    <section className=\"msg-preview\" onClick={onClickChat}>\r\n      <div className={containerStyle}>\r\n        <div className=\"img-container\">\r\n          <img src={theNotLoggedUserChat?.imgUrl} alt=\"\" className=\"img\" />\r\n          {unreadMsgsCount > 0 && (\r\n            <span className=\"number\">\r\n              <p>{unreadMsgsCount}</p>\r\n            </span>\r\n          )}\r\n        </div>\r\n        <div className=\"details\">\r\n          <div className=\"fullname\">\r\n            <h1>{theNotLoggedUserChat?.fullname}</h1>\r\n\r\n            <span title={dateToShow}>\r\n              <ReactSnip lines={1} method={'css'}>\r\n                {slicedDate}\r\n              </ReactSnip>\r\n            </span>\r\n          </div>\r\n          <div className=\"last-msg\">\r\n            <ReactSnip lines={1} method={'css'}>\r\n              <p>{lastMsg}</p>\r\n            </ReactSnip>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { useEffect, useState } from 'react'\r\nimport { MsgPreview } from './MsgPreview'\r\n\r\nexport function ListMsg({\r\n  chats,\r\n  setMessagesToShow,\r\n  setChatWith,\r\n  chatWith,\r\n  setChooseenChatId,\r\n  chooseenChatId,\r\n  getTheNotLoggedUserChat,\r\n  setTheNotLoggedUserChat,\r\n  theNotLoggedUserChat,\r\n}) {\r\n  const [chatsToShow, setChatsToShow] = useState(null)\r\n\r\n  const [field, setField] = useState({ txt: '' })\r\n\r\n  const handleChange = async ({ target }) => {\r\n    const field = target.name\r\n    let value = target.type === 'number' ? +target.value || '' : target.value\r\n    setField({ [field]: value })\r\n    setFilter(value)\r\n  }\r\n\r\n  const setFilter = (txt) => {\r\n    const regex = new RegExp(txt, 'i')\r\n    const filteredChats = [...chats].filter((chat) => {\r\n      return regex.test(chat.users[0]) || regex.test(chat.users[1])\r\n    })\r\n\r\n    setChatsToShow(filteredChats)\r\n  }\r\n\r\n  useEffect(() => {\r\n    setChatsToShow([...chats])\r\n  }, [chats])\r\n\r\n  return (\r\n    <section className=\"list-msg\">\r\n      <div className=\"title-container\">\r\n        <p>Messaging</p>\r\n\r\n        <div className=\"logos\">\r\n          <span className=\"logo-menu\">\r\n            <FontAwesomeIcon\r\n              className=\"dots-icon\"\r\n              icon=\"fa-solid fa-ellipsis\"\r\n            />\r\n          </span>\r\n          <span className=\"logo-new-msg\">\r\n            <FontAwesomeIcon icon=\"fa-solid fa-message\" />\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"filter-container\">\r\n        <input\r\n          onChange={handleChange}\r\n          type=\"text\"\r\n          id=\"txt\"\r\n          name=\"txt\"\r\n          value={field.txt}\r\n          placeholder=\"Search messages\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"list\">\r\n        {chatsToShow &&\r\n          chatsToShow.map((chat) => (\r\n            <MsgPreview\r\n              key={chat._id}\r\n              chat={chat}\r\n              chats={chats}\r\n              setMessagesToShow={setMessagesToShow}\r\n              setChatWith={setChatWith}\r\n              chatWith={chatWith}\r\n              setChooseenChatId={setChooseenChatId}\r\n              getTheNotLoggedUserChat={getTheNotLoggedUserChat}\r\n              setTheNotLoggedUserChat={setTheNotLoggedUserChat}\r\n              theNotLoggedUserChat={theNotLoggedUserChat}\r\n              chooseenChatId={chooseenChatId}\r\n            />\r\n          ))}\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n","import { useState } from 'react'\r\nimport { useEffect } from 'react'\r\nimport { userService } from '../../services/user/userService'\r\nimport TimeAgo from 'react-timeago'\r\nimport { useHistory } from 'react-router-dom'\r\nimport loadingCircle from '../../assets/imgs/loading-circle.gif'\r\n\r\nexport function ThreadMsgPreview({ msg }) {\r\n  const [userMsg, setUserMsg] = useState(null)\r\n  const history = useHistory()\r\n\r\n  const loadUserMsg = async (id) => {\r\n    if (!msg) return\r\n    const user = await userService.getById(id)\r\n    setUserMsg(() => user)\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadUserMsg(msg.userId)\r\n  }, [])\r\n\r\n  return (\r\n    <section className=\"thread-msg-preview\">\r\n      <div className=\"container-msg\">\r\n        <div\r\n          className=\"img-container\"\r\n          onClick={() => history.push(`/main/profile/${userMsg?._id}`)}\r\n        >\r\n          {(userMsg?.imgUrl && (\r\n            <img src={userMsg?.imgUrl || ''} alt=\"\" className=\"img\" />\r\n          )) || <img src={loadingCircle} className=\"img\" alt=\"\" />}\r\n        </div>\r\n\r\n        <div className=\"name-time-container\">\r\n          <div className=\"fullname\">\r\n            <h3>{userMsg?.fullname}</h3>\r\n          </div>\r\n          <div className=\"time\">\r\n            <span>\r\n              <TimeAgo date={msg.createdAt} />\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"the-msg\">\r\n        <p>{msg.txt}</p>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n","import { ThreadMsgPreview } from './ThreadMsgPreview'\r\n\r\nexport function ThreadMsgList({ messagesToShow }) {\r\n  if (!messagesToShow?.length) return <div>No msgs yet..</div>\r\n\r\n  return (\r\n    <section className=\"thread-msg-list\">\r\n      <div className=\"list\">\r\n        {messagesToShow.map((msg) => (\r\n          <ThreadMsgPreview key={msg._id} msg={msg} />\r\n        ))}\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n","import { useEffect, useState } from 'react'\r\n\r\nexport function SendMessageForm({ onSendMsg, messagesToShow }) {\r\n  const [newMsg, setNewMsg] = useState({\r\n    txt: '',\r\n  })\r\n  const handleChange = async (e) => {\r\n    const field = e.target.name\r\n    let value =\r\n      e.target.type === 'number' ? +e.target.value || '' : e.target.value\r\n    setNewMsg((prevCred) => ({ ...prevCred, [field]: value }))\r\n  }\r\n\r\n  const doSubmit = () => {\r\n    onSendMsg(newMsg.txt)\r\n    setNewMsg({ txt: '' })\r\n  }\r\n\r\n  const inputRef = (elInput) => {\r\n    if (elInput) elInput.focus()\r\n  }\r\n\r\n  useEffect(() => {\r\n    setNewMsg({ txt: '' })\r\n    return () => {}\r\n  }, [messagesToShow])\r\n\r\n  return (\r\n    <form\r\n      className=\"send-msg-container\"\r\n      onSubmit={(ev) => {\r\n        ev.preventDefault()\r\n        doSubmit()\r\n      }}\r\n    >\r\n      <div className=\"input-container\">\r\n        <textarea\r\n          ref={inputRef}\r\n          required\r\n          onChange={handleChange}\r\n          type=\"text\"\r\n          placeholder=\"Write a message...\"\r\n          id=\"txt\"\r\n          name=\"txt\"\r\n          value={newMsg.txt}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"btns-container\">\r\n        <button>Send</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { ThreadMsgList } from './ThreadMsgList'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useEffect } from 'react'\r\nimport { SendMessageForm } from './SendMessageForm'\r\n\r\nexport function MessageThread({\r\n  messagesToShow,\r\n  setMessagesToShow,\r\n  chatWith,\r\n  onSendMsg,\r\n}) {\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    scrollToBottom()\r\n    return () => {}\r\n  }, [messagesToShow])\r\n\r\n  const scrollToBottom = () => {\r\n    var msgsContainer = document.querySelector('.user-profile-details')\r\n    msgsContainer.scrollTop = msgsContainer.scrollHeight\r\n  }\r\n\r\n  return (\r\n    <section className=\"message-thread\">\r\n      <header className=\"header-message-thread\">\r\n        <div>\r\n          <div\r\n            className=\"img-profile\"\r\n            onClick={() => history.push(`/main/profile/${chatWith?._id}`)}\r\n          >\r\n            <img src={chatWith?.imgUrl} alt=\"\" className=\"img\" />\r\n          </div>\r\n          <div className=\"fullname\">{chatWith?.fullname}</div>\r\n        </div>\r\n        <div className=\"container-logo\">\r\n          <span className=\"logo-menu\">\r\n            <FontAwesomeIcon\r\n              icon=\"fa-solid fa-x\"\r\n              className=\"dots-icon\"\r\n              onClick={() => {\r\n                setMessagesToShow(null)\r\n              }}\r\n            />\r\n          </span>\r\n        </div>\r\n      </header>\r\n\r\n      <div className=\"user-profile-details scroll-area\">\r\n        <ThreadMsgList messagesToShow={messagesToShow} />\r\n      </div>\r\n\r\n      <SendMessageForm onSendMsg={onSendMsg} messagesToShow={messagesToShow} />\r\n    </section>\r\n  )\r\n}\r\n","import { ListMsg } from './ListMsg'\r\nimport { MessageThread } from './MessageThread'\r\n\r\nexport function Messaging({\r\n  chats,\r\n  chatWith,\r\n  messagesToShow,\r\n  setMessagesToShow,\r\n  chooseenChatId,\r\n  setChooseenChatId,\r\n  setChatWith,\r\n  getTheNotLoggedUserChat,\r\n  setTheNotLoggedUserChat,\r\n  theNotLoggedUserChat,\r\n  onSendMsg,\r\n}) {\r\n  return (\r\n    <section className=\"messaging\">\r\n      <div className=\"container\">\r\n        <ListMsg\r\n          chats={chats}\r\n          setMessagesToShow={setMessagesToShow}\r\n          setChatWith={setChatWith}\r\n          chatWith={chatWith}\r\n          setChooseenChatId={setChooseenChatId}\r\n          chooseenChatId={chooseenChatId}\r\n          getTheNotLoggedUserChat={getTheNotLoggedUserChat}\r\n          setTheNotLoggedUserChat={setTheNotLoggedUserChat}\r\n          theNotLoggedUserChat={theNotLoggedUserChat}\r\n        />\r\n        {messagesToShow && (\r\n          <MessageThread\r\n            messagesToShow={messagesToShow}\r\n            chatWith={chatWith}\r\n            onSendMsg={onSendMsg}\r\n            setMessagesToShow={setMessagesToShow}\r\n          />\r\n        )}\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n","import { useEffect, useState } from 'react'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { setCurrPage } from '../store/actions/postActions'\r\nimport { Messaging } from '../cmps/message/Messaging'\r\nimport {\r\n  addTempChat,\r\n  removeTempChat,\r\n  loadChats,\r\n  saveChat,\r\n} from '../store/actions/chatActions'\r\nimport { useParams } from 'react-router-dom'\r\nimport { userService } from '../services/user/userService'\r\nimport { utilService } from '../services/utilService'\r\nimport {\r\n  saveActivity,\r\n  setUnreadActivitiesIds,\r\n} from '../store/actions/activityAction'\r\nimport loadingGif from '../assets/imgs/loading-gif.gif'\r\nimport { updateUser } from '../store/actions/userActions'\r\n\r\n// Custom hook to manage chat-related functionality\r\nfunction useChat(loggedInUser, chats, params) {\r\n  const dispatch = useDispatch()\r\n  const [isUserChatExist, setIsUserChatExist] = useState(undefined)\r\n  const [messagesToShow, setMessagesToShow] = useState(null)\r\n  const [chooseenChatId, setChooseenChatId] = useState(null)\r\n  const [isNewChat, setIsNewChat] = useState(false)\r\n  const [theNotLoggedUserChat, setTheNotLoggedUserChat] = useState(null)\r\n  const [chatWith, setChatWith] = useState(null)\r\n\r\n  // Check if chat exists with the user from URL params\r\n  const checkIfChatExist = () => {\r\n    return new Promise((resolve, reject) => {\r\n      if (!chats) return reject(false)\r\n      \r\n      const isChatExist = chats.some(chat => \r\n        chat.userId === params.userId || chat.userId2 === params.userId\r\n      )\r\n      \r\n      if (isChatExist) resolve(isChatExist)\r\n      else reject(isChatExist)\r\n    })\r\n  }\r\n\r\n  // Find chat by user ID\r\n  const findChat = (userId) => {\r\n    return chats.find(chat => \r\n      chat.userId === userId || chat.userId2 === userId\r\n    )\r\n  }\r\n\r\n  // Get the user that is not the logged-in user from the chat\r\n  const getTheNotLoggedUserChat = async (chat) => {\r\n    if (!chat || !loggedInUser) return null\r\n    \r\n    let userId\r\n    if (loggedInUser._id !== chat.userId) userId = chat.userId\r\n    else if (loggedInUser._id !== chat.userId2) userId = chat.userId2\r\n    \r\n    return await userService.getById(userId) || null\r\n  }\r\n\r\n  // Create a new chat object\r\n  const createChat = (userId) => {\r\n    return {\r\n      _id: utilService.makeId(7),\r\n      userId,\r\n      userId2: loggedInUser?._id,\r\n      messages: [],\r\n      createdAt: new Date().getTime(),\r\n    }\r\n  }\r\n\r\n  // Create a new message object\r\n  const createNewMsg = (txt) => {\r\n    return {\r\n      _id: utilService.makeId(24),\r\n      txt,\r\n      userId: loggedInUser._id,\r\n      createdAt: new Date().getTime(),\r\n    }\r\n  }\r\n\r\n  // Load the non-logged-in user's data\r\n  const loadNotLoggedUser = async (chat) => {\r\n    const user = await getTheNotLoggedUserChat(chat) || null\r\n    setTheNotLoggedUserChat(user)\r\n    setChatWith(user)\r\n  }\r\n\r\n  // Open or create a chat\r\n  const openChat = async () => {\r\n    if (isUserChatExist === true) {\r\n      const chatToShow = findChat(params.userId)\r\n      await loadNotLoggedUser(chatToShow)\r\n      setChooseenChatId(chatToShow._id)\r\n      setMessagesToShow(chatToShow.messages)\r\n    } else if (isUserChatExist === false) {\r\n      if (!params.userId || !chats) return\r\n      const newChat = createChat(params.userId)\r\n      dispatch(addTempChat(newChat))\r\n      setIsNewChat(true)\r\n      await loadNotLoggedUser(newChat)\r\n      setChooseenChatId(newChat._id)\r\n      setMessagesToShow(newChat.messages)\r\n    }\r\n  }\r\n\r\n  // Handle sending a message\r\n  const onSendMsg = (txt) => {\r\n    const newMsg = createNewMsg(txt)\r\n    const chatIdx = chats.findIndex((chat) => chat._id === chooseenChatId)\r\n    const chatToUpdate = { ...chats[chatIdx] }\r\n    \r\n    chatToUpdate.messages.push(newMsg)\r\n    chatToUpdate.users = [\r\n      loggedInUser?.fullname,\r\n      theNotLoggedUserChat?.fullname,\r\n    ]\r\n    \r\n    if (isNewChat) {\r\n      dispatch(removeTempChat(chatToUpdate._id))\r\n      delete chatToUpdate._id\r\n    }\r\n    \r\n    setIsNewChat(false)\r\n\r\n    dispatch(saveChat(chatToUpdate)).then((savedChat) => {\r\n      setMessagesToShow(savedChat.messages)\r\n      if (savedChat) {\r\n        const newActivity = {\r\n          type: 'private-message',\r\n          createdBy: loggedInUser?._id,\r\n          createdTo: loggedInUser._id === savedChat.userId\r\n            ? savedChat.userId2\r\n            : savedChat.userId,\r\n          chatId: savedChat._id,\r\n        }\r\n        dispatch(saveActivity(newActivity))\r\n      }\r\n    })\r\n  }\r\n\r\n  return {\r\n    isUserChatExist,\r\n    setIsUserChatExist,\r\n    messagesToShow,\r\n    setMessagesToShow,\r\n    chooseenChatId,\r\n    setChooseenChatId,\r\n    theNotLoggedUserChat,\r\n    setTheNotLoggedUserChat,\r\n    chatWith,\r\n    setChatWith,\r\n    checkIfChatExist,\r\n    openChat,\r\n    onSendMsg,\r\n    getTheNotLoggedUserChat\r\n  }\r\n}\r\n\r\nfunction Message() {\r\n  const dispatch = useDispatch()\r\n\r\n  const params = useParams()\r\n\r\n  const { loggedInUser } = useSelector((state) => state.userModule)\r\n  const { chats } = useSelector((state) => state.chatModule)\r\n\r\n  const {\r\n    isUserChatExist,\r\n    setIsUserChatExist,\r\n    messagesToShow,\r\n    setMessagesToShow,\r\n    chooseenChatId,\r\n    setChooseenChatId,\r\n    theNotLoggedUserChat,\r\n    setTheNotLoggedUserChat,\r\n    chatWith,\r\n    setChatWith,\r\n    checkIfChatExist,\r\n    openChat,\r\n    onSendMsg,\r\n    getTheNotLoggedUserChat\r\n  } = useChat(loggedInUser, chats, params)\r\n\r\n  useEffect(() => {\r\n    dispatch(setCurrPage('message'))\r\n    const userId = loggedInUser?._id\r\n    if (!userId) return\r\n    \r\n    dispatch(loadChats(userId)).then(() => {\r\n      checkIfChatExist()\r\n        .then((bool) => {\r\n          if (params.userId === loggedInUser._id) return\r\n          setIsUserChatExist(bool)\r\n          openChat()\r\n        })\r\n        .catch((bool) => {\r\n          if (params.userId === loggedInUser._id) return\r\n          setIsUserChatExist(bool)\r\n          openChat()\r\n        })\r\n    })\r\n  }, [loggedInUser, params.userId, isUserChatExist])\r\n\r\n  useEffect(() => {\r\n    return async () => {\r\n      await updateLastSeenLoggedUser()\r\n      dispatch(setUnreadActivitiesIds())\r\n    }\r\n  }, [])\r\n\r\n  const updateLastSeenLoggedUser = async () => {\r\n    const lastSeenMsgs = new Date().getTime()\r\n    await dispatch(updateUser({ ...loggedInUser, lastSeenMsgs }))\r\n  }\r\n\r\n  if (!chats)\r\n    return (\r\n      <div className=\"message-page\">\r\n        <div className=\"gif-container\">\r\n          <img className=\"loading-gif\" src={loadingGif} alt=\"\" />\r\n        </div>\r\n      </div>\r\n    )\r\n  return (\r\n    <section className=\"message-page\">\r\n      <Messaging\r\n        chats={chats}\r\n        messagesToShow={messagesToShow}\r\n        setMessagesToShow={setMessagesToShow}\r\n        chooseenChatId={chooseenChatId}\r\n        setChooseenChatId={setChooseenChatId}\r\n        chatWith={chatWith}\r\n        setChatWith={setChatWith}\r\n        getTheNotLoggedUserChat={getTheNotLoggedUserChat}\r\n        setTheNotLoggedUserChat={setTheNotLoggedUserChat}\r\n        theNotLoggedUserChat={theNotLoggedUserChat}\r\n        onSendMsg={onSendMsg}\r\n      />\r\n      <div className=\"right-side-message\">\r\n        <p>This ad could be yours</p>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Message\r\n","export const utilService = {\r\n  makeId,\r\n  debounce,\r\n  getRandomInt,\r\n  getRandomColor,\r\n  getLoremIpsum,\r\n  loadFromStorage,\r\n  saveToStorage,\r\n  loadFromSessionStorage,\r\n  saveToSessionStorage,\r\n  delay,\r\n}\r\nfunction makeId(length = 5) {\r\n  var txt = ''\r\n  var possible =\r\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n  for (var i = 0; i < length; i++) {\r\n    txt += possible.charAt(Math.floor(Math.random() * possible.length))\r\n  }\r\n  return txt\r\n}\r\n\r\nfunction delay(ms = 1500) {\r\n  return new Promise((resolve) => {\r\n    setTimeout(resolve, ms)\r\n  })\r\n}\r\n\r\nfunction debounce(func, wait) {\r\n  let timeout\r\n\r\n  return function executedFunction(...args) {\r\n    //rest-makes the args to an array\r\n    const later = () => {\r\n      clearTimeout(timeout)\r\n      func(...args) //spread-from array to vars\r\n    }\r\n\r\n    clearTimeout(timeout)\r\n    timeout = setTimeout(later, wait)\r\n  }\r\n}\r\n\r\nfunction getRandomColor() {\r\n  var color = '#'\r\n  for (var i = 0; i < 6; i++) {\r\n    color += Math.floor(Math.random() * 10)\r\n  }\r\n  return color\r\n}\r\n\r\nfunction getRandomInt(min, max) {\r\n  min = Math.ceil(min)\r\n  max = Math.floor(max)\r\n  return Math.floor(Math.random() * (max - min) + min) //The maximum is exclusive and the minimum is inclusive\r\n}\r\n\r\nfunction getLoremIpsum(length = 5) {\r\n  const words = [\r\n    'The sky',\r\n    'above',\r\n    'the port',\r\n    'was',\r\n    'the color of television',\r\n    'tuned',\r\n    'to',\r\n    'a dead channel',\r\n    '.',\r\n    'All',\r\n    'this happened',\r\n    'more or less',\r\n    '.',\r\n    'I',\r\n    'had',\r\n    'the story',\r\n    'bit by bit',\r\n    'from various people',\r\n    'and',\r\n    'as generally',\r\n    'happens',\r\n    'in such cases',\r\n    'each time',\r\n    'it',\r\n    'was',\r\n    'a different story',\r\n    '.',\r\n    'It',\r\n    'was',\r\n    'a pleasure',\r\n    'to',\r\n    'burn',\r\n  ]\r\n  let sentence = ''\r\n  while (length > 0) {\r\n    sentence += words[getRandomInt(0, words.length - 1)] + ' '\r\n    length--\r\n  }\r\n  sentence += '.'\r\n  return sentence.trim()\r\n}\r\n\r\nfunction loadFromStorage(key) {\r\n  var val = localStorage.getItem(key)\r\n  return val ? JSON.parse(val) : null\r\n}\r\n\r\nfunction saveToStorage(key, val) {\r\n  localStorage[key] = JSON.stringify(val)\r\n}\r\n\r\nfunction loadFromSessionStorage(key) {\r\n  var val = sessionStorage.getItem(key)\r\n  return val ? JSON.parse(val) : null\r\n}\r\n\r\nfunction saveToSessionStorage(key, val) {\r\n  sessionStorage[key] = JSON.stringify(val)\r\n}\r\n","export default function dateParser(date) {\n  const parsed = new Date(date);\n\n  if (!Number.isNaN(parsed.valueOf())) {\n    return parsed;\n  }\n\n  const parts = String(date).match(/\\d+/g);\n\n  if (parts == null || parts.length <= 2) {\n    return parsed;\n  } else {\n    const [firstP, secondP, ...restPs] = parts.map(x => parseInt(x));\n    const correctedParts = [firstP, secondP - 1, ...restPs];\n    const isoDate = new Date(Date.UTC(...correctedParts));\n    return isoDate;\n  }\n}","export default function defaultFormatter(value, _unit, suffix) {\n  const unit = value !== 1 ? _unit + 's' : _unit;\n  return value + ' ' + unit + ' ' + suffix;\n}","function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport dateParser from './dateParser';\nimport defaultFormatter from './defaultFormatter';\n// Just some simple constants for readability\nconst MINUTE = 60;\nconst HOUR = MINUTE * 60;\nconst DAY = HOUR * 24;\nconst WEEK = DAY * 7;\nconst MONTH = DAY * 30;\nconst YEAR = DAY * 365;\nexport default function TimeAgo({\n  date,\n  formatter = defaultFormatter,\n  component = 'time',\n  live = true,\n  minPeriod = 0,\n  maxPeriod = WEEK,\n  title,\n  now = () => Date.now(),\n  ...passDownProps\n}) {\n  const [timeNow, setTimeNow] = useState(now());\n  useEffect(() => {\n    if (!live) {\n      return;\n    }\n\n    const tick = () => {\n      const then = dateParser(date).valueOf();\n\n      if (!then) {\n        console.warn('[react-timeago] Invalid Date provided');\n        return 0;\n      }\n\n      const seconds = Math.round(Math.abs(timeNow - then) / 1000);\n      const unboundPeriod = seconds < MINUTE ? 1000 : seconds < HOUR ? 1000 * MINUTE : seconds < DAY ? 1000 * HOUR : 1000 * WEEK;\n      const period = Math.min(Math.max(unboundPeriod, minPeriod * 1000), maxPeriod * 1000);\n\n      if (period) {\n        return setTimeout(() => {\n          setTimeNow(now());\n        }, period);\n      }\n\n      return 0;\n    };\n\n    const timeoutId = tick();\n    return () => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n    };\n  }, [date, live, maxPeriod, minPeriod, now, timeNow]);\n  const Komponent = component;\n  const then = dateParser(date).valueOf();\n\n  if (!then) {\n    return null;\n  }\n\n  const seconds = Math.round(Math.abs(timeNow - then) / 1000);\n  const suffix = then < timeNow ? 'ago' : 'from now';\n  const [value, unit] = seconds < MINUTE ? [Math.round(seconds), 'second'] : seconds < HOUR ? [Math.round(seconds / MINUTE), 'minute'] : seconds < DAY ? [Math.round(seconds / HOUR), 'hour'] : seconds < WEEK ? [Math.round(seconds / DAY), 'day'] : seconds < MONTH ? [Math.round(seconds / WEEK), 'week'] : seconds < YEAR ? [Math.round(seconds / MONTH), 'month'] : [Math.round(seconds / YEAR), 'year'];\n  const passDownTitle = typeof title === 'undefined' ? typeof date === 'string' ? date : dateParser(date).toISOString().substr(0, 16).replace('T', ' ') : title;\n  const spreadProps = Komponent === 'time' ? { ...passDownProps,\n    dateTime: dateParser(date).toISOString()\n  } : passDownProps;\n  const nextFormatter = defaultFormatter.bind(null, value, unit, suffix);\n  return /*#__PURE__*/React.createElement(Komponent, _extends({}, spreadProps, {\n    title: passDownTitle\n  }), formatter(value, unit, suffix, then, nextFormatter, now));\n}"],"names":["destroyObserver","e","t","current","element","observer","disconnect","prevWidth","prevHeight","elementLines","window","getComputedStyle","parseInt","height","lineHeight","fontSize","Math","ceil","defaultOptions","snipText","r","n","options","method","i","s","l","style","display","webkitLineClamp","webkitBoxOrient","overflow","textContent","fullText","lines","unprocessed","processed","midWord","forEach","split","length","ellipsis","trim","snipTextJS","clientWidth","clientHeight","snipTextCSS","useSnip","useRef","useLayoutEffect","CSS","supports","getOptions","ResizeObserver","observe","addObserver","ReactSnip","children","Children","isValidElement","React","ref","props","cloneElement","MsgPreview","chat","chats","setMessagesToShow","setChatWith","chatWith","chooseenChatId","setChooseenChatId","getTheNotLoggedUserChat","theNotLoggedUserChat","setTheNotLoggedUserChat","useState","unreadMsgsCount","setUnreadMsgsCount","unreadMessages","useSelector","state","activityModule","lastMsg","messages","txt","dateToShow","Date","createdAt","slicedDate","toLocaleDateString","slice","useEffect","async","user","loadNotLoggedUser","countMsgs","chatId","_id","getUnreadCountMsgs","isChatChooseen","containerStyle","className","onClick","src","imgUrl","alt","fullname","title","loadingGif","ListMsg","chatsToShow","setChatsToShow","field","setField","setFilter","regex","RegExp","filteredChats","filter","test","users","icon","onChange","target","name","value","type","id","placeholder","map","ThreadMsgPreview","msg","userMsg","setUserMsg","history","useHistory","userService","loadUserMsg","userId","push","loadingCircle","date","ThreadMsgList","messagesToShow","SendMessageForm","onSendMsg","newMsg","setNewMsg","onSubmit","ev","preventDefault","elInput","focus","required","prevCred","MessageThread","scrollToBottom","msgsContainer","document","querySelector","scrollTop","scrollHeight","Messaging","useChat","loggedInUser","params","dispatch","useDispatch","isUserChatExist","setIsUserChatExist","undefined","isNewChat","setIsNewChat","userId2","checkIfChatExist","Promise","resolve","reject","isChatExist","some","openChat","chatToShow","find","newChat","utilService","getTime","createChat","addTempChat","createNewMsg","chatIdx","findIndex","chatToUpdate","removeTempChat","saveChat","then","savedChat","newActivity","createdBy","createdTo","saveActivity","useParams","userModule","chatModule","setCurrPage","loadChats","bool","catch","updateLastSeenLoggedUser","setUnreadActivitiesIds","lastSeenMsgs","updateUser","makeId","possible","charAt","floor","random","debounce","func","wait","timeout","args","later","clearTimeout","setTimeout","getRandomInt","getRandomColor","color","getLoremIpsum","words","sentence","loadFromStorage","key","val","localStorage","getItem","JSON","parse","saveToStorage","stringify","loadFromSessionStorage","sessionStorage","saveToSessionStorage","delay","ms","min","max","dateParser","parsed","Number","isNaN","valueOf","parts","String","match","firstP","secondP","restPs","x","correctedParts","UTC","defaultFormatter","_unit","suffix","_extends","Object","assign","bind","arguments","source","prototype","hasOwnProperty","call","apply","this","HOUR","MINUTE","DAY","WEEK","MONTH","YEAR","TimeAgo","formatter","component","live","minPeriod","maxPeriod","now","passDownProps","timeNow","setTimeNow","timeoutId","console","warn","seconds","round","abs","unboundPeriod","period","tick","Komponent","unit","passDownTitle","toISOString","substr","replace","spreadProps","dateTime","nextFormatter"],"sourceRoot":""}