{"version":3,"file":"static/js/433.588dfdd0.chunk.js","mappings":"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","sources":["cmps/posts/CreatePostModal.jsx","cmps/profile/ImgPreview.jsx","cmps/map/UserIconPos.jsx","cmps/map/MapMenu.jsx","cmps/map/PostIconMap.jsx","pages/Map.jsx","services/imgUpload.service.js"],"sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { useEffect, useState } from 'react'\r\n\r\nimport { uploadImg, uploadVid } from '../../services/imgUpload.service'\r\nimport LoadingGif from '../../assets/imgs/loading-gif.gif'\r\n\r\nexport const CreatePostModal = ({\r\n  toggleShowCreatePost,\r\n  onAddPost,\r\n  isShowCreatePost,\r\n  loggedInUser,\r\n}) => {\r\n  const initPost = {\r\n    body: '',\r\n    imgBodyUrl: null,\r\n    videoBodyUrl: null,\r\n    link: '',\r\n    title: '',\r\n    style: {\r\n      textAlign: 'ltr',\r\n    },\r\n  }\r\n\r\n  const [newPost, setNewPost] = useState(initPost)\r\n  const [isUploding, setIsUploding] = useState(false)\r\n\r\n  const handleChange = async (e) => {\r\n    const field = e.target.name\r\n    let value =\r\n      e.target.type === 'number' ? +e.target.value || '' : e.target.value\r\n    setNewPost((prevCred) => ({\r\n      ...prevCred,\r\n      [field]: value,\r\n    }))\r\n  }\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      setNewPost(null)\r\n    }\r\n  }, [])\r\n\r\n  const doSubmit = () => {\r\n    onAddPost(newPost)\r\n  }\r\n\r\n  const inputRef = (elInput) => {\r\n    if (elInput) elInput.focus()\r\n  }\r\n\r\n  const onUploadImg = async (ev) => {\r\n    try {\r\n      setIsUploding(true)\r\n      const res = await uploadImg(ev)\r\n      setIsUploding(false)\r\n      setNewPost((prev) => {\r\n        return {\r\n          ...prev,\r\n          imgBodyUrl: res.url,\r\n        }\r\n      })\r\n    } catch (err) {\r\n      setIsUploding(false)\r\n      console.log(err)\r\n    }\r\n  }\r\n\r\n  const onUploadVideo = async (ev) => {\r\n    try {\r\n      setIsUploding(true)\r\n      const res = await uploadVid(ev)\r\n      setIsUploding(false)\r\n      setNewPost((prev) => {\r\n        return {\r\n          ...prev,\r\n          videoBodyUrl: res.url,\r\n        }\r\n      })\r\n    } catch (err) {\r\n      setIsUploding(false)\r\n      console.log(err)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <section\r\n      className={\r\n        isShowCreatePost ? ' create-post-modal' : 'hide create-post-modal'\r\n      }\r\n      onClick={(ev) => {\r\n        ev.stopPropagation()\r\n        toggleShowCreatePost()\r\n      }}\r\n    >\r\n      <form\r\n        className=\"container\"\r\n        onSubmit={(ev) => {\r\n          ev.preventDefault()\r\n          doSubmit()\r\n        }}\r\n        onClick={(ev) => {\r\n          ev.stopPropagation()\r\n        }}\r\n      >\r\n        <div className=\"title\">\r\n          <h1>Create a post</h1>\r\n          <span className=\"close-icon\" onClick={toggleShowCreatePost}>\r\n            <FontAwesomeIcon icon=\"fa-solid fa-x\" />\r\n          </span>\r\n        </div>\r\n\r\n        <div className=\"name-container\">\r\n          <div className=\"img-container\">\r\n            <img src={loggedInUser?.imgUrl} alt=\"\" className=\"img-profile\" />\r\n          </div>\r\n          <div className=\"name\">\r\n            <h2>{loggedInUser?.fullname}</h2>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"input-container\">\r\n          <textarea\r\n            required\r\n            ref={inputRef}\r\n            onChange={handleChange}\r\n            type=\"text\"\r\n            id=\"body\"\r\n            name=\"body\"\r\n            value={newPost.txt}\r\n            placeholder=\"What do you want to talk about?\"\r\n          ></textarea>\r\n        </div>\r\n\r\n        <div className=\"link-container\">\r\n          <input\r\n            id=\"link\"\r\n            name=\"link\"\r\n            value={newPost.link}\r\n            onChange={handleChange}\r\n            type=\"text\"\r\n            placeholder=\"Add a link here\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"is-loading-container\">\r\n          <p>\r\n            {isUploding && (\r\n              <span>\r\n                <img src={LoadingGif} alt=\"\" />\r\n              </span>\r\n            )}\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"container-video-body\">\r\n          <div className=\"body-video\">\r\n            {newPost.videoBodyUrl && (\r\n              <video width=\"100%\" height=\"300\" controls>\r\n                <source src={newPost.videoBodyUrl} type=\"video/mp4\" />\r\n              </video>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"container-img-body\">\r\n          <div className=\"body-img\">\r\n            {newPost.imgBodyUrl && (\r\n              <img src={newPost.imgBodyUrl} alt=\"\" className=\"img\" />\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"btns-add-container\">\r\n          <div\r\n            className=\"cancel-btn btn\"\r\n            onClick={() => {\r\n              setNewPost({\r\n                body: '',\r\n                imgBodyUrl: null,\r\n                videoBodyUrl: null,\r\n                title: '',\r\n                style: {\r\n                  textAlign: 'ltr',\r\n                },\r\n              })\r\n\r\n              toggleShowCreatePost()\r\n            }}\r\n          >\r\n            Cancel\r\n          </div>\r\n          {!newPost.videoBodyUrl && (\r\n            <div className=\"add-video-btn btn\">\r\n              <label htmlFor=\"videoUrl\" className=\"add-video-container\">\r\n                <input\r\n                  onChange={onUploadVideo}\r\n                  id=\"videoUrl\"\r\n                  type=\"file\"\r\n                  name=\"videoUrl\"\r\n                  accept=\"video/*\"\r\n                  hidden\r\n                />\r\n                <p className=\"add-video-body\">Add video</p>\r\n              </label>\r\n            </div>\r\n          )}\r\n\r\n          {!newPost.imgBodyUrl && (\r\n            <div className=\"add-img-btn btn\">\r\n              <label htmlFor=\"imgUrl\" className=\"add-img-container\">\r\n                <input\r\n                  onChange={onUploadImg}\r\n                  id=\"imgUrl\"\r\n                  type=\"file\"\r\n                  name=\"imgUrl\"\r\n                  accept=\"image/*\"\r\n                  hidden\r\n                />\r\n                <p className=\"add-img-body\">Add photo</p>\r\n              </label>\r\n            </div>\r\n          )}\r\n\r\n          <button className=\"post-btn btn\">Done</button>\r\n        </div>\r\n      </form>\r\n    </section>\r\n  )\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { userService } from '../../services/user/userService'\r\n\r\nexport function ImgPreview({\r\n  toggleShowImg,\r\n  imgUrl,\r\n  videoUrl,\r\n  title,\r\n  post,\r\n  body,\r\n}) {\r\n  const history = useHistory()\r\n\r\n  const [user, setUser] = useState(null)\r\n\r\n  const loadUser = async (userId) => {\r\n    const user = await userService.getById(userId)\r\n    setUser(user)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (post?.userId) loadUser(post.userId)\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"img-profile-preview\">\r\n      <div className=\"bg\" onClick={toggleShowImg}></div>\r\n      <section className=\"container\">\r\n        <div className=\"title\">\r\n          {(user && post && (\r\n            <div\r\n              className=\"user-details\"\r\n              onClick={() => history.push(`/main/profile/${post.userId}`)}\r\n            >\r\n              <img src={user.imgUrl} alt=\"\" className=\"img\" />\r\n              <p className=\"fullname\">{user.fullname}</p>\r\n            </div>\r\n          )) ||\r\n            (post && <p className=\"user-details\">Loading user...</p>)}\r\n\r\n          <p>{title}</p>\r\n\r\n          <span className=\"logo-close\" onClick={toggleShowImg}>\r\n            <FontAwesomeIcon icon=\"fa-solid fa-x\" />\r\n          </span>\r\n        </div>\r\n\r\n        {body && (\r\n          <div>\r\n            <p className=\"body\">{body}</p>\r\n          </div>\r\n        )}\r\n\r\n        {post && (\r\n          <div className=\"see-post\">\r\n            <p\r\n              onClick={() =>\r\n                history.push(`/main/post/${post.userId}/${post._id}`)\r\n              }\r\n            >\r\n              See original post\r\n            </p>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"img-container\">\r\n          {(imgUrl && <img className=\"img\" src={imgUrl} alt=\"\" />) ||\r\n            (videoUrl && (\r\n              <div>\r\n                <video width=\"100%\" height=\"300\" controls>\r\n                  <source src={videoUrl} type=\"video/mp4\" />\r\n                </video>\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nexport const UserIconPos = ({ url, userId, fullname, isCloseUserIcon }) => {\r\n  const [isUserIconOpen, setisUserIconOpen] = useState(false)\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    if (isCloseUserIcon) {\r\n      setisUserIconOpen(false)\r\n    }\r\n    return () => {}\r\n  }, [isCloseUserIcon])\r\n\r\n  return (\r\n    <div\r\n      className=\"user-icon-pos-container\"\r\n      onClick={(ev) => {\r\n        ev.stopPropagation()\r\n        setisUserIconOpen((prev) => !prev)\r\n      }}\r\n    >\r\n      <img\r\n        className=\"user-icon-pos\"\r\n        src={url}\r\n        alt={fullname}\r\n        title={fullname}\r\n      />\r\n      {isUserIconOpen && (\r\n        <div className=\"menu-container\">\r\n          <div className=\"opts-btns\">\r\n            <div className=\"fullname \">\r\n              <p>{fullname}</p>\r\n            </div>\r\n            <div\r\n              className=\"go-to-profile opt\"\r\n              onClick={() => history.push(`/main/profile/${userId}`)}\r\n            >\r\n              <p>Go to profile</p>\r\n            </div>\r\n            <div\r\n              className=\"send-message opt\"\r\n              onClick={() => history.push(`/main/message/${userId}`)}\r\n            >\r\n              <p>Send a message</p>\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            className=\"close\"\r\n            onClick={(ev) => {\r\n              ev.stopPropagation()\r\n              setisUserIconOpen(false)\r\n            }}\r\n          >\r\n            <span>Close</span>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nexport const MapMenu = ({ menuPosition, setIsCreateShowPost }) => {\r\n  return (\r\n    <section className=\"map-menu\">\r\n      <span className=\"location-icon\">\r\n        <FontAwesomeIcon icon=\"fa-solid fa-location-dot\" />\r\n      </span>\r\n\r\n      <div className=\"opts-container\">\r\n        <div\r\n          className=\"add-post-to-map opt\"\r\n          onClick={() => {\r\n            setIsCreateShowPost(true)\r\n          }}\r\n        >\r\n          <p>Add a post here</p>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nexport const PostIconMap = ({ post, setPostToPreview }) => {\r\n  return (\r\n    <section className=\"post-icon-map\">\r\n      <div className=\"container\">\r\n        <div\r\n          className=\"logo-post-icon-map-container\"\r\n          onClick={() => setPostToPreview(post)}\r\n        >\r\n          <span className=\"img-logo\">\r\n            {(post.imgBodyUrl && (\r\n              <img src={post.imgBodyUrl} alt=\"\" className=\"img\" />\r\n            )) ||\r\n              (post.videoBodyUrl && (\r\n                <p>\r\n                  <span className=\"post-logo\">\r\n                    <FontAwesomeIcon icon=\"fa-solid fa-video\" />\r\n                  </span>\r\n                </p>\r\n              )) || (\r\n                <p>\r\n                  <span className=\"post-logo\">\r\n                    <FontAwesomeIcon icon=\"fa-solid fa-comment-dots\" />\r\n                  </span>\r\n                </p>\r\n              )}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport GoogleMapReact from 'google-map-react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { UserIconPos } from '../cmps/map/UserIconPos'\r\nimport { MapMenu } from '../cmps/map/MapMenu'\r\nimport { PostIconMap } from '../cmps/map/PostIconMap'\r\nimport { ImgPreview } from '../cmps/profile/ImgPreview'\r\nimport { CreatePostModal } from '../cmps/posts/CreatePostModal'\r\nimport {\r\n  loadPosts,\r\n  savePost,\r\n  setCurrPage,\r\n  setFilterByPosts,\r\n} from '../store/actions/postActions'\r\nimport {\r\n  getUsers,\r\n  setFilterByUsers,\r\n  updateUser,\r\n} from '../store/actions/userActions'\r\n\r\nfunction Map() {\r\n  const dispatch = useDispatch()\r\n\r\n  const [defaultProps, setDefaultProps] = useState({\r\n    center: {\r\n      lat: 32.05591645013164,\r\n      lng: 34.7549857056555,\r\n    },\r\n    zoom: 2,\r\n    yesIWantToUseGoogleMapApiInternals: true,\r\n  })\r\n  const [isCloseUserIcon, setIsCloseUserIcon] = useState(false)\r\n  const [isMapClicked, setIsMapClicked] = useState(false)\r\n  const [menuPosition, setMenuPosition] = useState(null)\r\n  const [postToPreview, setPostToPreview] = useState(false)\r\n  const [isShowCreatePost, setIsCreateShowPost] = useState(false)\r\n\r\n  const { loggedInUser } = useSelector((state) => state.userModule)\r\n  const { users } = useSelector((state) => state.userModule)\r\n  const { posts } = useSelector((state) => state.postModule)\r\n\r\n  useEffect(() => {\r\n    dispatch(setCurrPage('map'))\r\n    const filterBy = {\r\n      position: 'position',\r\n    }\r\n    dispatch(setFilterByUsers(filterBy))\r\n    dispatch(getUsers())\r\n    dispatch(setFilterByPosts(filterBy))\r\n    dispatch(loadPosts())\r\n    getLocation()\r\n\r\n    return () => {\r\n      dispatch(setFilterByPosts(null))\r\n      dispatch(setFilterByUsers(null))\r\n    }\r\n  }, [])\r\n\r\n  const saveUser = (position) => {\r\n    if (!loggedInUser) return\r\n    dispatch(updateUser({ ...loggedInUser, position }))\r\n  }\r\n\r\n  const togglePostToPreview = (post) => {\r\n    if (postToPreview) setPostToPreview(null)\r\n    else {\r\n      setPostToPreview(post)\r\n    }\r\n  }\r\n\r\n  const toggleShowCreatePost = () => {\r\n    setIsCreateShowPost((prev) => !prev)\r\n  }\r\n\r\n  const onAddPost = (post) => {\r\n    const postToAdd = {\r\n      ...post,\r\n      userId: loggedInUser._id,\r\n      position: menuPosition,\r\n    }\r\n    dispatch(savePost(postToAdd)).then(() => toggleShowCreatePost())\r\n  }\r\n\r\n  function getLocation() {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(showPosition)\r\n    } else {\r\n      console.log('Geolocation is not supported by this browser.')\r\n    }\r\n  }\r\n  function showPosition(position) {\r\n    const positionToSave = {\r\n      lat: position.coords.latitude,\r\n      lng: position.coords.longitude,\r\n    }\r\n    if (position) saveUser(positionToSave)\r\n  }\r\n\r\n  const closeUserIcon = () => {\r\n    setIsCloseUserIcon((prev) => !prev)\r\n  }\r\n\r\n  const onClickMap = (ev) => {\r\n    const positionOfMenu = {\r\n      lat: ev.lat,\r\n      lng: ev.lng,\r\n    }\r\n    closeUserIcon()\r\n    setMenuPosition(positionOfMenu)\r\n    setIsMapClicked((prev) => !prev)\r\n  }\r\n\r\n  return (\r\n    <section className=\"map-page \">\r\n      <div className=\"map\" style={{ height: '100%', width: '100%' }}>\r\n        <GoogleMapReact\r\n          bootstrapURLKeys={{ key: `AIzaSyC9AFUykGS85sRwdfagUSX3H2ib7relELI` }}\r\n          defaultCenter={defaultProps.center}\r\n          defaultZoom={defaultProps.zoom}\r\n          yesIWantToUseGoogleMapApiInternals\r\n          onClick={(ev) => onClickMap(ev)}\r\n        >\r\n          {users &&\r\n            users.map((user) => (\r\n              <UserIconPos\r\n                key={user._id}\r\n                lat={user?.position?.lat || 32.05591645013164}\r\n                lng={user?.position?.lng || 34.7549857056555}\r\n                url={user.imgUrl}\r\n                userId={user._id}\r\n                fullname={user.fullname}\r\n                isCloseUserIcon={isCloseUserIcon}\r\n              />\r\n            ))}\r\n\r\n          {posts &&\r\n            posts.map((post) => (\r\n              <PostIconMap\r\n                key={post?._id}\r\n                lat={post?.position?.lat}\r\n                lng={post?.position?.lng}\r\n                post={post}\r\n                setPostToPreview={setPostToPreview}\r\n              />\r\n            ))}\r\n\r\n          {isMapClicked && menuPosition && (\r\n            <MapMenu\r\n              menuPosition={menuPosition}\r\n              lat={menuPosition.lat}\r\n              lng={menuPosition.lng}\r\n              setIsCreateShowPost={setIsCreateShowPost}\r\n            />\r\n          )}\r\n        </GoogleMapReact>\r\n      </div>\r\n\r\n      {postToPreview && (\r\n        <ImgPreview\r\n          toggleShowImg={togglePostToPreview}\r\n          title={postToPreview.title}\r\n          body={postToPreview.body}\r\n          imgUrl={postToPreview.imgBodyUrl}\r\n          post={postToPreview}\r\n          videoUrl={postToPreview?.videoBodyUrl}\r\n        />\r\n      )}\r\n\r\n      {isShowCreatePost && (\r\n        <CreatePostModal\r\n          isShowCreatePost={isShowCreatePost}\r\n          onAddPost={onAddPost}\r\n          toggleShowCreatePost={toggleShowCreatePost}\r\n          loggedInUser={loggedInUser}\r\n        />\r\n      )}\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Map\r\n","import { httpService } from \"./httpService\";\r\n\r\nconst toBase64 = (file) =>\r\n  new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = (error) => reject(error);\r\n  });\r\n\r\nexport const uploadImg = async (ev) => {\r\n  try {\r\n    const file = ev.target.files[0];\r\n\r\n    if (!file) {\r\n      throw new Error(\"No file selected\");\r\n    }\r\n\r\n    const base64File = await toBase64(file);\r\n\r\n    const response = await httpService.post(\"cloudinary/upload\", {\r\n      file: base64File,\r\n      resourceType: \"image\",\r\n    });\r\n\r\n    return response;\r\n  } catch (err) {\r\n    console.error(\"Error uploading image:\", err?.message);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const uploadVid = async (ev) => {\r\n  try {\r\n    const file = ev.target.files[0];\r\n\r\n    if (!file) {\r\n      throw new Error(\"No file selected\");\r\n    }\r\n\r\n    const base64File = await toBase64(file);\r\n\r\n    const response = await httpService.post(\"cloudinary/upload\", {\r\n      file: base64File,\r\n      resourceType: \"video\",\r\n    });\r\n\r\n    return response;\r\n  } catch (err) {\r\n    console.error(\"Error uploading video:\", err?.message);\r\n    throw err;\r\n  }\r\n};\r\n"],"names":["CreatePostModal","toggleShowCreatePost","onAddPost","isShowCreatePost","loggedInUser","newPost","setNewPost","useState","body","imgBodyUrl","videoBodyUrl","link","title","style","textAlign","isUploding","setIsUploding","handleChange","async","field","e","target","name","value","type","prevCred","useEffect","className","onClick","ev","stopPropagation","onSubmit","preventDefault","icon","src","imgUrl","alt","fullname","required","ref","elInput","focus","onChange","id","txt","placeholder","LoadingGif","width","height","controls","htmlFor","res","uploadVid","prev","url","err","console","log","accept","hidden","uploadImg","ImgPreview","toggleShowImg","videoUrl","post","history","useHistory","user","setUser","userId","userService","loadUser","push","_id","UserIconPos","isCloseUserIcon","isUserIconOpen","setisUserIconOpen","MapMenu","menuPosition","setIsCreateShowPost","PostIconMap","setPostToPreview","dispatch","useDispatch","defaultProps","setDefaultProps","center","lat","lng","zoom","yesIWantToUseGoogleMapApiInternals","setIsCloseUserIcon","isMapClicked","setIsMapClicked","setMenuPosition","postToPreview","useSelector","state","userModule","users","posts","postModule","setCurrPage","filterBy","position","setFilterByUsers","getUsers","setFilterByPosts","loadPosts","navigator","geolocation","getCurrentPosition","showPosition","positionToSave","coords","latitude","longitude","updateUser","saveUser","onClickMap","positionOfMenu","bootstrapURLKeys","key","defaultCenter","defaultZoom","map","postToAdd","savePost","then","toBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","files","Error","base64File","httpService","resourceType","message"],"sourceRoot":""}