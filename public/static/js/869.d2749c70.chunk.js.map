{"version":3,"file":"static/js/869.d2749c70.chunk.js","mappings":"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","sources":["cmps/posts/CreatePostModal.jsx","cmps/posts/PostsList.jsx","cmps/posts/AddPost.jsx","cmps/posts/SortBy.jsx","cmps/posts/Posts.jsx","cmps/RightSideBar.jsx","cmps/CommunityPanel.jsx","cmps/FeedIdentityModule.jsx","cmps/LeftSideBar.jsx","pages/Feed.jsx","services/imgUpload.service.js"],"sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { useEffect, useState } from 'react'\r\n\r\nimport { uploadImg, uploadVid } from '../../services/imgUpload.service'\r\nimport LoadingGif from '../../assets/imgs/loading-gif.gif'\r\n\r\nexport const CreatePostModal = ({\r\n  toggleShowCreatePost,\r\n  onAddPost,\r\n  isShowCreatePost,\r\n  loggedInUser,\r\n}) => {\r\n  const initPost = {\r\n    body: '',\r\n    imgBodyUrl: null,\r\n    videoBodyUrl: null,\r\n    link: '',\r\n    title: '',\r\n    style: {\r\n      textAlign: 'ltr',\r\n    },\r\n  }\r\n\r\n  const [newPost, setNewPost] = useState(initPost)\r\n  const [isUploding, setIsUploding] = useState(false)\r\n\r\n  const handleChange = async (e) => {\r\n    const field = e.target.name\r\n    let value =\r\n      e.target.type === 'number' ? +e.target.value || '' : e.target.value\r\n    setNewPost((prevCred) => ({\r\n      ...prevCred,\r\n      [field]: value,\r\n    }))\r\n  }\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      setNewPost(null)\r\n    }\r\n  }, [])\r\n\r\n  const doSubmit = () => {\r\n    onAddPost(newPost)\r\n  }\r\n\r\n  const inputRef = (elInput) => {\r\n    if (elInput) elInput.focus()\r\n  }\r\n\r\n  const onUploadImg = async (ev) => {\r\n    try {\r\n      setIsUploding(true)\r\n      const res = await uploadImg(ev)\r\n      setIsUploding(false)\r\n      setNewPost((prev) => {\r\n        return {\r\n          ...prev,\r\n          imgBodyUrl: res.url,\r\n        }\r\n      })\r\n    } catch (err) {\r\n      setIsUploding(false)\r\n      console.log(err)\r\n    }\r\n  }\r\n\r\n  const onUploadVideo = async (ev) => {\r\n    try {\r\n      setIsUploding(true)\r\n      const res = await uploadVid(ev)\r\n      setIsUploding(false)\r\n      setNewPost((prev) => {\r\n        return {\r\n          ...prev,\r\n          videoBodyUrl: res.url,\r\n        }\r\n      })\r\n    } catch (err) {\r\n      setIsUploding(false)\r\n      console.log(err)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <section\r\n      className={\r\n        isShowCreatePost ? ' create-post-modal' : 'hide create-post-modal'\r\n      }\r\n      onClick={(ev) => {\r\n        ev.stopPropagation()\r\n        toggleShowCreatePost()\r\n      }}\r\n    >\r\n      <form\r\n        className=\"container\"\r\n        onSubmit={(ev) => {\r\n          ev.preventDefault()\r\n          doSubmit()\r\n        }}\r\n        onClick={(ev) => {\r\n          ev.stopPropagation()\r\n        }}\r\n      >\r\n        <div className=\"title\">\r\n          <h1>Create a post</h1>\r\n          <span className=\"close-icon\" onClick={toggleShowCreatePost}>\r\n            <FontAwesomeIcon icon=\"fa-solid fa-x\" />\r\n          </span>\r\n        </div>\r\n\r\n        <div className=\"name-container\">\r\n          <div className=\"img-container\">\r\n            <img src={loggedInUser?.imgUrl} alt=\"\" className=\"img-profile\" />\r\n          </div>\r\n          <div className=\"name\">\r\n            <h2>{loggedInUser?.fullname}</h2>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"input-container\">\r\n          <textarea\r\n            required\r\n            ref={inputRef}\r\n            onChange={handleChange}\r\n            type=\"text\"\r\n            id=\"body\"\r\n            name=\"body\"\r\n            value={newPost.txt}\r\n            placeholder=\"What do you want to talk about?\"\r\n          ></textarea>\r\n        </div>\r\n\r\n        <div className=\"link-container\">\r\n          <input\r\n            id=\"link\"\r\n            name=\"link\"\r\n            value={newPost.link}\r\n            onChange={handleChange}\r\n            type=\"text\"\r\n            placeholder=\"Add a link here\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"is-loading-container\">\r\n          <p>\r\n            {isUploding && (\r\n              <span>\r\n                <img src={LoadingGif} alt=\"\" />\r\n              </span>\r\n            )}\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"container-video-body\">\r\n          <div className=\"body-video\">\r\n            {newPost.videoBodyUrl && (\r\n              <video width=\"100%\" height=\"300\" controls>\r\n                <source src={newPost.videoBodyUrl} type=\"video/mp4\" />\r\n              </video>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"container-img-body\">\r\n          <div className=\"body-img\">\r\n            {newPost.imgBodyUrl && (\r\n              <img src={newPost.imgBodyUrl} alt=\"\" className=\"img\" />\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"btns-add-container\">\r\n          <div\r\n            className=\"cancel-btn btn\"\r\n            onClick={() => {\r\n              setNewPost({\r\n                body: '',\r\n                imgBodyUrl: null,\r\n                videoBodyUrl: null,\r\n                title: '',\r\n                style: {\r\n                  textAlign: 'ltr',\r\n                },\r\n              })\r\n\r\n              toggleShowCreatePost()\r\n            }}\r\n          >\r\n            Cancel\r\n          </div>\r\n          {!newPost.videoBodyUrl && (\r\n            <div className=\"add-video-btn btn\">\r\n              <label htmlFor=\"videoUrl\" className=\"add-video-container\">\r\n                <input\r\n                  onChange={onUploadVideo}\r\n                  id=\"videoUrl\"\r\n                  type=\"file\"\r\n                  name=\"videoUrl\"\r\n                  accept=\"video/*\"\r\n                  hidden\r\n                />\r\n                <p className=\"add-video-body\">Add video</p>\r\n              </label>\r\n            </div>\r\n          )}\r\n\r\n          {!newPost.imgBodyUrl && (\r\n            <div className=\"add-img-btn btn\">\r\n              <label htmlFor=\"imgUrl\" className=\"add-img-container\">\r\n                <input\r\n                  onChange={onUploadImg}\r\n                  id=\"imgUrl\"\r\n                  type=\"file\"\r\n                  name=\"imgUrl\"\r\n                  accept=\"image/*\"\r\n                  hidden\r\n                />\r\n                <p className=\"add-img-body\">Add photo</p>\r\n              </label>\r\n            </div>\r\n          )}\r\n\r\n          <button className=\"post-btn btn\">Done</button>\r\n        </div>\r\n      </form>\r\n    </section>\r\n  )\r\n}\r\n","import { PostPreview } from './post-preview/PostPreview'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useEffect } from 'react'\r\nimport loadingGif from '../../assets/imgs/loading-gif.gif'\r\nimport { useParams } from 'react-router-dom'\r\nimport {\r\n  addPosts,\r\n  addFilterByPosts,\r\n  setNextPage,\r\n} from '../../store/actions/postActions'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nexport const PostsList = () => {\r\n  const dispatch = useDispatch()\r\n  const params = useParams()\r\n  const { posts } = useSelector((state) => state.postModule)\r\n  const { pageNumber } = useSelector((state) => state.postModule)\r\n  const { isPostsLoading } = useSelector((state) => state.postModule)\r\n  const { postsLength } = useSelector((state) => state.postModule)\r\n\r\n  const onLoadNextPage = () => {\r\n    const filterBy = {\r\n      pageNumber,\r\n    }\r\n    if (params.userId) filterBy.userId = params.userId\r\n    if (!postsLength && !posts) return\r\n    if (postsLength === posts?.length) return\r\n    dispatch(addFilterByPosts(filterBy))\r\n    dispatch(addPosts())\r\n    dispatch(setNextPage())\r\n  }\r\n\r\n  const handleScroll = () => {\r\n    if (posts?.length >= postsLength) return\r\n    if (\r\n      window.scrollY + window.innerHeight + 0.9 >=\r\n      document.documentElement.scrollHeight\r\n    ) {\r\n      onLoadNextPage()\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', handleScroll)\r\n    return () => {\r\n      window.removeEventListener('scroll', handleScroll)\r\n    }\r\n  }, [postsLength])\r\n\r\n  if (!posts)\r\n    return (\r\n      <div className=\"posts-list\">\r\n        <span className=\"gif-container\">\r\n          <img className=\"loading-gif\" src={loadingGif} alt=\"\" />\r\n        </span>\r\n      </div>\r\n    )\r\n\r\n  return (\r\n    <section className=\"posts-list\">\r\n      {posts.map((post,idx) => (\r\n        <PostPreview key={post._id+idx} post={post} />\r\n      ))}\r\n      <div onClick={onLoadNextPage} className=\"load-more\">\r\n        {!isPostsLoading && posts?.length < postsLength && (\r\n          <p className=\"load-btn\">\r\n            <span>\r\n              <FontAwesomeIcon icon=\"fa-solid fa-caret-down\" />\r\n            </span>\r\n          </p>\r\n        )}\r\n        {isPostsLoading && posts?.length < postsLength && (\r\n          <span className=\"gif-container\">\r\n            <img className=\"loading-gif\" src={loadingGif} alt=\"\" />\r\n          </span>\r\n        )}\r\n        {posts?.length === postsLength &&  <p >No more posts</p>}\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { CreatePostModal } from './CreatePostModal'\r\nimport { useState } from 'react'\r\nimport { savePost } from '../../store/actions/postActions'\r\n\r\nexport const AddPost = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const { loggedInUser } = useSelector((state) => state.userModule)\r\n\r\n  const [isShowCreatePost, setIsShowCreatePost] = useState(false)\r\n\r\n  const toggleShowCreatePost = () => {\r\n    setIsShowCreatePost((prev) => !prev)\r\n  }\r\n\r\n  const onAddPost = (post) => {\r\n    const postToAdd = {\r\n      ...post,\r\n      userId: loggedInUser._id,\r\n      fullname: loggedInUser.fullname,\r\n    }\r\n    dispatch(savePost(postToAdd)).then(() => toggleShowCreatePost())\r\n  }\r\n\r\n  return (\r\n    <section className=\"add-post\" onClick={toggleShowCreatePost}>\r\n      <section className=\"top\">\r\n        <div className=\"img-container\">\r\n          <img src={loggedInUser.imgUrl} alt=\"\" className=\"icon\" />\r\n        </div>\r\n        <button className=\"input-container\">\r\n          <span>Start a post</span>\r\n        </button>\r\n      </section>\r\n\r\n      <section className=\"btns-container\">\r\n        <button>\r\n          <FontAwesomeIcon className=\"photo icon\" icon=\"fa-solid fa-image\" />\r\n          <span>Photo</span>\r\n        </button>\r\n        <button>\r\n          <FontAwesomeIcon className=\"video icon\" icon=\"fa-solid fa-video\" />\r\n          <span>Video</span>\r\n        </button>\r\n        <button>\r\n          <FontAwesomeIcon\r\n            className=\"calendar icon\"\r\n            icon=\"fa-solid fa-calendar-days\"\r\n          />\r\n          <span>Event</span>\r\n        </button>\r\n        <button>\r\n          <FontAwesomeIcon\r\n            className=\"newspaper icon\"\r\n            icon=\"fa-solid fa-newspaper\"\r\n          />\r\n          <span>Write article</span>\r\n        </button>\r\n      </section>\r\n      {\r\n        <CreatePostModal\r\n          isShowCreatePost={isShowCreatePost}\r\n          toggleShowCreatePost={toggleShowCreatePost}\r\n          onAddPost={onAddPost}\r\n          loggedInUser={loggedInUser}\r\n        />\r\n      }\r\n    </section>\r\n  )\r\n}\r\n","export const SortBy = ({ onSetSort }) => {\r\n  return (\r\n    <section className=\"sort-by\">\r\n      <hr className=\"divider\" />\r\n      <form action=\"\" className=\"sort-container\">\r\n        <label htmlFor=\"sortBy\" className=\"label\">\r\n          Sort by:\r\n          <select\r\n            name=\"sortBy\"\r\n            id=\"opts\"\r\n            onChange={(e) => {\r\n              onSetSort(e.target.value)\r\n            }}\r\n          >\r\n            <option value=\"-1\">Newest</option>\r\n            <option value=\"1\">Oldest</option>\r\n          </select>\r\n        </label>\r\n      </form>\r\n    </section>\r\n  )\r\n}\r\n","import { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { AddPost } from './AddPost'\r\nimport { PostsList } from './PostsList'\r\nimport { SortBy } from './SortBy'\r\nimport {\r\n  loadPosts,\r\n  addFilterByPosts,\r\n  getPostsLength,\r\n} from '../../store/actions/postActions'\r\nimport loadongGif from '../../assets/imgs/loading-gif.gif'\r\n\r\nexport const Posts = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const { posts } = useSelector((state) => state.postModule)\r\n\r\n  useEffect(() => {\r\n    dispatch(loadPosts())\r\n    dispatch(getPostsLength())\r\n  }, [dispatch])\r\n\r\n  const onSetSort = (value) => {\r\n    const filterBy = {\r\n      sort: +value,\r\n    }\r\n    dispatch(addFilterByPosts(filterBy))\r\n    dispatch(loadPosts())\r\n    dispatch(getPostsLength())\r\n  }\r\n\r\n  if (!posts)\r\n    return (\r\n      <section className=\"posts\">\r\n        <img\r\n          src={loadongGif}\r\n          alt=\"\"\r\n          style={{\r\n            position: 'relative',\r\n            left: ' 50%',\r\n            transform: ' translate(-50%)',\r\n          }}\r\n        />\r\n      </section>\r\n    )\r\n\r\n  return (\r\n    <section className=\"posts\">\r\n      <AddPost />\r\n      <SortBy onSetSort={onSetSort} />\r\n      {posts && <PostsList />}\r\n    </section>\r\n  )\r\n}\r\n","import { useEffect,useState ,useCallback} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { getUsers } from '../store/actions/userActions'\r\n\r\nexport const RightSideBar = () => {\r\n  const { users } = useSelector((state) => state.userModule)\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  const { loggedInUser } = useSelector((state) => state.userModule)\r\n\r\n  const [filteredUsers, setFilteredUsers] = useState([])\r\n\r\n  const filterUsers = useCallback(() => {\r\n    if (users && loggedInUser) {\r\n      const notConnected = users.filter(\r\n        (user) =>\r\n          !loggedInUser.connections.some(\r\n            (connection) => connection.userId === user._id\r\n          )\r\n      )\r\n      setFilteredUsers(notConnected)\r\n    }\r\n  }, [users, loggedInUser])\r\n\r\n  useEffect(() => {\r\n    filterUsers()\r\n  }, [filterUsers])\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsers())\r\n  }, [dispatch])\r\n\r\n  const lengtConections = [0, 1, 2]\r\n  return filteredUsers.length > 0 && (\r\n    <section className=\"right-side-bar\">\r\n      <div className=\"container\">\r\n        <div className=\"title\">\r\n          <p>Add to your feed</p>\r\n        </div>\r\n        <br />\r\n        <div className=\"list\">\r\n          {filteredUsers?.length &&\r\n            lengtConections.map((num, idx) => (\r\n              <div\r\n                key={filteredUsers[num]?._id || idx}\r\n                className=\"preview\"\r\n                onClick={() => history.push(`profile/${filteredUsers[num]?._id}`)}\r\n              >\r\n                <div className=\"img-container\">\r\n                  <img src={filteredUsers[num]?.imgUrl} className=\"img\" alt=\"\" />\r\n                </div>\r\n                <div>\r\n                  <div className=\"fullname\">\r\n                    <p>{filteredUsers[num]?.fullname}</p>\r\n                  </div>\r\n                  <div className=\"profession\">\r\n                    <p>{filteredUsers[num]?.profession}</p>\r\n                  </div>\r\n                  <div className=\"btn\"></div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"else-container\">\r\n        <div>\r\n          <h3>Promoted</h3>\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <p>Looking for a full-stack developer for your project or team? I'm open to collaboration and exciting challenges.</p>\r\n        </div>\r\n        <br />\r\n        <div className=\"img-container\">\r\n          <a href=\"https://www.shlomi.dev/\" target=\"_blank\" rel=\"noreferrer\">\r\n            <img\r\n              src=\"https://res.cloudinary.com/duajg3ah1/image/upload/v1741866031/6ed80c70-7184-4e22-af43-c1b9357bfb2c.png\"\r\n              className=\"img\"\r\n              alt={''}\r\n            />\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n","export function CommunityPanel(props) {\r\n  return (\r\n    <section className=\"community-panel\">\r\n      <div>\r\n        <img\r\n          src=\"https://images.unsplash.com/photo-1488646953014-85cb44e25828?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1035&q=80\"\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <p>\r\n          Explore topics you are interested in <br /> with Travelsdin\r\n        </p>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n","import { useDispatch, useSelector } from 'react-redux'\r\nimport { logout } from '../store/actions/userActions'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nexport const FeedIdentityModule = (props) => {\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n\r\n  const { loggedInUser } = useSelector((state) => state.userModule)\r\n\r\n  const doLogout = async () => {\r\n    dispatch(logout()).then((res) => {\r\n      if (res) history.push(`/`)\r\n    })\r\n  }\r\n\r\n  if (!loggedInUser)\r\n    return <section className=\"feed-identity-module\">Loading</section>\r\n\r\n  const { fullname, imgUrl, profession } = loggedInUser\r\n\r\n  return (\r\n    <section className=\"feed-identity-module\">\r\n      <div className=\"\">\r\n        <div className=\"bg\">\r\n          <div\r\n            className=\"profile-container\"\r\n            onClick={() => history.push(`profile/${loggedInUser._id}`)}\r\n          >\r\n            <img src={imgUrl} alt=\"\" className=\"img\" />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"profile-name\">\r\n          <h1>{fullname}</h1>\r\n          <p className=\"professional\">{profession}</p>\r\n        </div>\r\n\r\n        <div className=\"views\">\r\n          <div>\r\n            <p>{loggedInUser?.connections?.length} connections</p>\r\n          </div>\r\n\r\n          <div></div>\r\n        </div>\r\n\r\n        <div className=\"my-items\">\r\n          <div onClick={doLogout}>\r\n            <p>Logout</p>\r\n            <span>\r\n              <FontAwesomeIcon icon=\"fa-solid fa-arrow-right-from-bracket\" />\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n","import { CommunityPanel } from './CommunityPanel'\r\nimport { FeedIdentityModule } from './FeedIdentityModule'\r\n\r\nexport function LeftSideBar(props) {\r\n  return (\r\n    <section className=\"left-side-bar\">\r\n      <FeedIdentityModule />\r\n      <CommunityPanel />\r\n    </section>\r\n  )\r\n}\r\n","import { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Posts } from '../cmps/posts/Posts'\r\nimport { RightSideBar } from '../cmps/RightSideBar'\r\nimport { LeftSideBar } from '../cmps/LeftSideBar'\r\nimport { setCurrPage, setNextPage } from '../store/actions/postActions'\r\nimport loadongGif from '../assets/imgs/loading-gif.gif'\r\n\r\nconst Feed = () => {\r\n  const { loggedInUser } = useSelector((state) => state.userModule)\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(setCurrPage('home'))\r\n    dispatch(setNextPage(1))\r\n  }, [dispatch])\r\n\r\n  if (!loggedInUser)\r\n    return (\r\n      <section className=\"feed-load\">\r\n        <div className=\"loading\">\r\n          <span>\r\n            <img src={loadongGif} alt=\"\" />\r\n          </span>\r\n        </div>\r\n      </section>\r\n    )\r\n\r\n  return (\r\n    <section className=\"feed-page\">\r\n      <LeftSideBar />\r\n      <Posts />\r\n      <RightSideBar />\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Feed\r\n","import { httpService } from \"./httpService\";\r\n\r\nconst toBase64 = (file) =>\r\n  new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = (error) => reject(error);\r\n  });\r\n\r\nexport const uploadImg = async (ev) => {\r\n  try {\r\n    const file = ev.target.files[0];\r\n\r\n    if (!file) {\r\n      throw new Error(\"No file selected\");\r\n    }\r\n\r\n    const base64File = await toBase64(file);\r\n\r\n    const response = await httpService.post(\"cloudinary/upload\", {\r\n      file: base64File,\r\n      resourceType: \"image\",\r\n    });\r\n\r\n    return response;\r\n  } catch (err) {\r\n    console.error(\"Error uploading image:\", err?.message);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const uploadVid = async (ev) => {\r\n  try {\r\n    const file = ev.target.files[0];\r\n\r\n    if (!file) {\r\n      throw new Error(\"No file selected\");\r\n    }\r\n\r\n    const base64File = await toBase64(file);\r\n\r\n    const response = await httpService.post(\"cloudinary/upload\", {\r\n      file: base64File,\r\n      resourceType: \"video\",\r\n    });\r\n\r\n    return response;\r\n  } catch (err) {\r\n    console.error(\"Error uploading video:\", err?.message);\r\n    throw err;\r\n  }\r\n};\r\n"],"names":["CreatePostModal","toggleShowCreatePost","onAddPost","isShowCreatePost","loggedInUser","newPost","setNewPost","useState","body","imgBodyUrl","videoBodyUrl","link","title","style","textAlign","isUploding","setIsUploding","handleChange","async","field","e","target","name","value","type","prevCred","useEffect","className","onClick","ev","stopPropagation","onSubmit","preventDefault","icon","src","imgUrl","alt","fullname","required","ref","elInput","focus","onChange","id","txt","placeholder","LoadingGif","width","height","controls","htmlFor","res","uploadVid","prev","url","err","console","log","accept","hidden","uploadImg","PostsList","dispatch","useDispatch","params","useParams","posts","useSelector","state","postModule","pageNumber","isPostsLoading","postsLength","onLoadNextPage","filterBy","userId","length","addFilterByPosts","addPosts","setNextPage","handleScroll","window","scrollY","innerHeight","document","documentElement","scrollHeight","addEventListener","removeEventListener","map","post","idx","_id","loadingGif","AddPost","userModule","setIsShowCreatePost","postToAdd","savePost","then","SortBy","onSetSort","action","Posts","loadPosts","getPostsLength","sort","loadongGif","position","left","transform","RightSideBar","users","history","useHistory","filteredUsers","setFilteredUsers","filterUsers","useCallback","notConnected","filter","user","connections","some","connection","getUsers","num","push","profession","href","rel","CommunityPanel","props","FeedIdentityModule","logout","LeftSideBar","setCurrPage","toBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","files","Error","base64File","httpService","resourceType","message"],"sourceRoot":""}